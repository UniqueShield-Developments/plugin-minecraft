import { Buffer } from 'buffer'

export type ByteArray = Buffer

export type SignedByteArray = Buffer

export type LittleString = any

export type LatinString = any

export type ShortArray = Buffer

export type ShortString = any

export type MapInfo = any

export type TexturePackInfos = Array<{ uuid: string; version: string; size: bigint; content_key: string; sub_pack_name: string; content_identity: string; has_scripts: boolean; addon_pack: boolean; rtx_enabled: boolean; cdn_url: string }>

export type ResourcePackIdVersions = Array<{ uuid: string; version: string; name: string }>

export type ResourcePackIds = Array<string>

export type Experiment = { name: string; enabled: boolean }

export type Experiments = Array<{ name: string; enabled: boolean }>

export type GameMode = 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator'

export type GameRule = { name: string; editable: boolean; type: 'bool' | 'int' | 'float'; value: {} | {} | {} }

export type GameRules = Array<{ name: string; editable: boolean; type: 'bool' | 'int' | 'float'; value: {} | {} | {} }>

export type Blob = { hash: bigint; payload: Buffer }

export type BlockProperties = Array<{ name: string; state: any }>

export type Itemstates = Array<{ name: string; runtime_id: any; component_based: boolean; version: 'legacy' | 'data_driven' | 'none'; nbt: any }>

export type ItemExtraDataWithBlockingTick = { has_nbt: 'false' | 'true'; nbt: { version: number; nbt: any }; can_place_on: Array<any>; can_destroy: Array<any>; blocking_tick: any }

export type ItemExtraDataWithoutBlockingTick = { has_nbt: 'false' | 'true'; nbt: { version: number; nbt: any }; can_place_on: Array<any>; can_destroy: Array<any> }

export type ItemLegacy = { network_id: number; undefined: {} }

export type Item = { network_id: number; undefined: {} }

export type Vec3fopts = { x: any; y: any; z: any }

export type Vec2fopts = { x: any; y: any }

export type MetadataDictionary = Array<{ key: 'flags' | 'health' | 'variant' | 'color' | 'nametag' | 'owner_eid' | 'target_eid' | 'air' | 'potion_color' | 'potion_ambient' | 'jump_duration' | 'hurt_time' | 'hurt_direction' | 'paddle_time_left' | 'paddle_time_right' | 'experience_value' | 'minecart_display_block' | 'minecart_display_offset' | 'minecart_has_display' | 'horse_type' | 'creeper_swell' | 'creeper_swell_direction' | 'charge_amount' | 'enderman_held_runtime_id' | 'entity_age' | 'player_flags' | 'player_index' | 'player_bed_position' | 'fireball_power_x' | 'fireball_power_y' | 'fireball_power_z' | 'aux_power' | 'fish_x' | 'fish_z' | 'fish_angle' | 'potion_aux_value' | 'lead_holder_eid' | 'scale' | 'interactive_tag' | 'npc_skin_id' | 'url_tag' | 'max_airdata_max_air' | 'mark_variant' | 'container_type' | 'container_base_size' | 'container_extra_slots_per_strength' | 'block_target' | 'wither_invulnerable_ticks' | 'wither_target_1' | 'wither_target_2' | 'wither_target_3' | 'wither_aerial_attack' | 'boundingbox_width' | 'boundingbox_height' | 'fuse_length' | 'rider_seat_position' | 'rider_rotation_locked' | 'rider_max_rotation' | 'rider_min_rotation' | 'rider_seat_rotation_offset' | 'area_effect_cloud_radius' | 'area_effect_cloud_waiting' | 'area_effect_cloud_particle_id' | 'shulker_peek_id' | 'shulker_attach_face' | 'shulker_attached' | 'shulker_attach_pos' | 'trading_player_eid' | 'trading_career' | 'has_command_block' | 'command_block_command' | 'command_block_last_output' | 'command_block_track_output' | 'controlling_rider_seat_number' | 'strength' | 'max_strength' | 'evoker_spell_casting_color' | 'limited_life' | 'armor_stand_pose_index' | 'ender_crystal_time_offset' | 'always_show_nametag' | 'color_2' | 'name_author' | 'score_tag' | 'balloon_attached_entity' | 'pufferfish_size' | 'bubble_time' | 'agent' | 'sitting_amount' | 'sitting_amount_previous' | 'eating_counter' | 'flags_extended' | 'laying_amount' | 'laying_amount_previous' | 'area_effect_cloud_duration' | 'area_effect_cloud_spawn_time' | 'area_effect_cloud_change_rate' | 'area_effect_cloud_change_on_pickup' | 'area_effect_cloud_pickup_count' | 'interact_text' | 'trade_tier' | 'max_trade_tier' | 'trade_experience' | 'skin_id' | 'spawning_frames' | 'command_block_tick_delay' | 'command_block_execute_on_first_tick' | 'ambient_sound_interval' | 'ambient_sound_interval_range' | 'ambient_sound_event_name' | 'fall_damage_multiplier' | 'name_raw_text' | 'can_ride_target' | 'low_tier_cured_discount' | 'high_tier_cured_discount' | 'nearby_cured_discount' | 'nearby_cured_discount_timestamp' | 'hitbox' | 'is_buoyant' | 'freezing_effect_strength' | 'buoyancy_data' | 'goat_horn_count' | 'update_properties' | 'movement_sound_distance_offset' | 'heartbeat_interval_ticks' | 'heartbeat_sound_event' | 'player_last_death_position' | 'player_last_death_dimension' | 'player_has_died' | 'collision_box' | 'visible_mob_effects' | 'filtered_name' | 'bed_enter_position'; type: 'byte' | 'short' | 'int' | 'float' | 'string' | 'compound' | 'vec3i' | 'long' | 'vec3f'; value: {} | {} }>

export type MetadataFlags1 = number

export type MetadataFlags2 = number

export type Link = { ridden_entity_id: bigint; rider_entity_id: bigint; type: number; immediate: boolean; rider_initiated: boolean; angular_velocity: any }

export type Links = Array<{ ridden_entity_id: bigint; rider_entity_id: bigint; type: number; immediate: boolean; rider_initiated: boolean; angular_velocity: any }>

export type EntityAttributes = Array<{ name: string; min: any; value: any; max: any }>

export type EntityProperties = { ints: Array<{ index: number; value: number }>; floats: Array<{ index: number; value: any }> }

export type Rotation = { yaw: number; pitch: number; head_yaw: number }

export type BlockCoordinates = { x: number; y: number; z: number }

export type PlayerAttributes = Array<{ min: any; max: any; current: any; default_min: any; default_max: any; default: any; name: string; modifiers: Array<{ id: string; name: string; amount: any; operation: number; operand: number; serializable: boolean }> }>

export type TransactionUseItem = { action_type: 'click_block' | 'click_air' | 'break_block'; trigger_type: 'unknown' | 'player_input' | 'simulation_tick'; block_position: { x: number; y: number; z: number }; face: number; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; player_pos: { x: any; y: any; z: any }; click_pos: { x: any; y: any; z: any }; block_runtime_id: number; client_prediction: 'failure' | 'success' }

export type TransactionActions = Array<{ source_type: 'container' | 'global' | 'world_interaction' | 'creative' | 'craft_slot' | 'craft'; undefined: { inventory_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none' } | { action: number } | { flags: number } | { action: number }; slot: number; old_item: { network_id: number; undefined: {} }; new_item: { network_id: number; undefined: {} } }>

export type TransactionLegacy = { legacy_request_id: number; legacy_transactions: {} }

export type Transaction = { legacy: { legacy_request_id: number; legacy_transactions: {} }; transaction_type: 'normal' | 'inventory_mismatch' | 'item_use' | 'item_use_on_entity' | 'item_release'; actions: Array<{ source_type: 'container' | 'global' | 'world_interaction' | 'creative' | 'craft_slot' | 'craft'; undefined: { inventory_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none' } | { action: number } | { flags: number } | { action: number }; slot: number; old_item: { network_id: number; undefined: {} }; new_item: { network_id: number; undefined: {} } }>; transaction_data: {} | {} | {} | { entity_runtime_id: any; action_type: 'interact' | 'attack'; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; player_pos: { x: any; y: any; z: any }; click_pos: { x: any; y: any; z: any } } | { action_type: 'release' | 'consume'; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; head_pos: { x: any; y: any; z: any } } }

export type ItemStacks = Array<{ network_id: number; undefined: {} }>

export type RecipeIngredient = { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }

export type PotionTypeRecipes = Array<{ input_item_id: number; input_item_meta: number; ingredient_id: number; ingredient_meta: number; output_item_id: number; output_item_meta: number }>

export type PotionContainerChangeRecipes = Array<{ input_item_id: number; ingredient_id: number; output_item_id: number }>

export type Recipes = Array<{ type: 'shapeless' | 'shaped' | 'furnace' | 'furnace_with_metadata' | 'multi' | 'shulker_box' | 'shapeless_chemistry' | 'shaped_chemistry' | 'smithing_transform' | 'smithing_trim'; recipe: { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; width: number; height: number; input: Array<Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; assume_symmetry: boolean; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; width: number; height: number; input: Array<Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; assume_symmetry: boolean; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { input_id: number; output: { network_id: number; undefined: {} }; block: string } | { input_id: number; input_meta: number; output: { network_id: number; undefined: {} }; block: string } | { uuid: string; network_id: number } | { recipe_id: any; template: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; base: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; addition: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; result: { network_id: number; undefined: {} }; tag: string; network_id: number } | { recipe_id: any; template: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; input: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; addition: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; block: string; network_id: number } }>

export type RecipeUnlockingRequirement = { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }

export type SkinImage = { width: number; height: number; data: Buffer }

export type Skin = { skin_id: string; play_fab_id: string; skin_resource_pack: string; skin_data: { width: number; height: number; data: Buffer }; animations: Array<{ skin_image: { width: number; height: number; data: Buffer }; animation_type: number; animation_frames: any; expression_type: any }>; cape_data: { width: number; height: number; data: Buffer }; geometry_data: string; geometry_data_version: string; animation_data: string; cape_id: string; full_skin_id: string; arm_size: string; skin_color: string; personal_pieces: Array<{ piece_id: string; piece_type: string; pack_id: string; is_default_piece: boolean; product_id: string }>; piece_tint_colors: Array<{ piece_type: string; colors: Array<string> }>; premium: boolean; persona: boolean; cape_on_classic: boolean; primary_user: boolean; overriding_player_appearance: boolean }

export type PlayerRecords = { type: 'add' | 'remove'; records_count: number; records: Array<{ uuid: string; entity_unique_id: bigint; username: string; xbox_user_id: string; platform_chat_id: string; build_platform: number; skin_data: { skin_id: string; play_fab_id: string; skin_resource_pack: string; skin_data: { width: number; height: number; data: Buffer }; animations: Array<{ skin_image: { width: number; height: number; data: Buffer }; animation_type: number; animation_frames: any; expression_type: any }>; cape_data: { width: number; height: number; data: Buffer }; geometry_data: string; geometry_data_version: string; animation_data: string; cape_id: string; full_skin_id: string; arm_size: string; skin_color: string; personal_pieces: Array<{ piece_id: string; piece_type: string; pack_id: string; is_default_piece: boolean; product_id: string }>; piece_tint_colors: Array<{ piece_type: string; colors: Array<string> }>; premium: boolean; persona: boolean; cape_on_classic: boolean; primary_user: boolean; overriding_player_appearance: boolean }; is_teacher: boolean; is_host: boolean; is_subclient: boolean } | { uuid: string }>; verified: Array<boolean> }

export type Enchant = { id: number; level: number }

export type EnchantOption = { cost: number; slot_flags: number; equip_enchants: Array<{ id: number; level: number }>; held_enchants: Array<{ id: number; level: number }>; self_enchants: Array<{ id: number; level: number }>; name: string; option_id: number }

export type Action = 'start_break' | 'abort_break' | 'stop_break' | 'get_updated_block' | 'drop_item' | 'start_sleeping' | 'stop_sleeping' | 'respawn' | 'jump' | 'start_sprint' | 'stop_sprint' | 'start_sneak' | 'stop_sneak' | 'creative_player_destroy_block' | 'dimension_change_ack' | 'start_glide' | 'stop_glide' | 'build_denied' | 'crack_break' | 'change_skin' | 'set_enchatnment_seed' | 'swimming' | 'stop_swimming' | 'start_spin_attack' | 'stop_spin_attack' | 'interact_block' | 'predict_break' | 'continue_break' | 'start_item_use_on' | 'stop_item_use_on' | 'handled_teleport' | 'missed_swing' | 'start_crawling' | 'stop_crawling' | 'start_flying' | 'stop_flying' | 'received_server_data' | 'start_using_item'

export type StackRequestSlotInfo = { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }

export type ItemStackRequest = { request_id: number; actions: Array<{ type_id: 'take' | 'place' | 'swap' | 'drop' | 'destroy' | 'consume' | 'create' | 'place_in_container' | 'take_out_container' | 'lab_table_combine' | 'beacon_payment' | 'mine_block' | 'craft_recipe' | 'craft_recipe_auto' | 'craft_creative' | 'optional' | 'craft_grindstone_request' | 'craft_loom_request' | 'non_implemented' | 'results_deprecated'; undefined: { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; randomly: boolean } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { result_slot_id: number } | { primary_effect: number; secondary_effect: number } | { hotbar_slot: number; predicted_durability: number; network_id: number } | { recipe_network_id: number; times_crafted: number } | { recipe_network_id: number; times_crafted_2: number; times_crafted: number; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> } | { item_id: number; times_crafted: number } | { recipe_network_id: number; filtered_string_index: number } | { recipe_network_id: number; times_crafted: number; cost: number } | { pattern: string; times_crafted: number } | {} | { result_items: Array<{ network_id: number; undefined: {} }>; times_crafted: number } }>; custom_names: Array<string>; cause: 'chat_public' | 'chat_whisper' | 'sign_text' | 'anvil_text' | 'book_and_quill_text' | 'command_block_text' | 'block_actor_data_text' | 'join_event_text' | 'leave_event_text' | 'slash_command_chat' | 'cartography_text' | 'kick_command' | 'title_command' | 'summon_command' }

export type ItemStackResponses = Array<{ status: 'ok' | 'error'; request_id: number; undefined: { containers: Array<{ slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slots: Array<{ slot: number; hotbar_slot: number; count: number; item_stack_id: number; custom_name: string; filtered_custom_name: string; durability_correction: number }> }> } }>

export type CommandOrigin = { type: 'player' | 'block' | 'minecart_block' | 'dev_console' | 'test' | 'automation_player' | 'client_automation' | 'dedicated_server' | 'entity' | 'virtual' | 'game_argument' | 'entity_server' | 'precompiled' | 'game_director_entity_server' | 'script' | 'executor'; uuid: string; request_id: string; player_entity_id: { player_entity_id: bigint } | { player_entity_id: bigint } }

export type TrackedObject = { type: 'entity' | 'block'; entity_unique_id: {}; block_position: {} }

export type MapDecoration = { type: 'marker_white' | 'marker_green' | 'marker_red' | 'marker_blue' | 'cross_white' | 'triangle_red' | 'square_white' | 'marker_sign' | 'marker_pink' | 'marker_orange' | 'marker_yellow' | 'marker_teal' | 'triangle_green' | 'small_square_white' | 'mansion' | 'monument' | 'no_draw' | 'village_desert' | 'village_plains' | 'village_savanna' | 'village_snowy' | 'village_taiga' | 'jungle_temple' | 'witch_hut =>' | 'marker_white' | 'marker_green' | 'marker_red' | 'marker_blue' | 'cross_white' | 'triangle_red' | 'square_white' | 'marker_sign' | 'marker_pink' | 'marker_orange' | 'marker_yellow' | 'marker_teal' | 'triangle_green' | 'small_square_white' | 'mansion' | 'monument' | 'no_draw' | 'village_desert' | 'village_plains' | 'village_savanna' | 'village_snowy' | 'village_taiga' | 'jungle_temple' | 'witch_hut'; rotation: number; x: number; y: number; label: string; color_abgr: number }

export type StructureBlockSettings = { palette_name: string; ignore_entities: boolean; ignore_blocks: boolean; non_ticking_players_and_ticking_areas: boolean; size: { x: number; y: number; z: number }; structure_offset: { x: number; y: number; z: number }; last_editing_player_unique_id: bigint; rotation: 'none' | '90_deg' | '180_deg' | '270_deg'; mirror: 'none' | 'x_axis' | 'z_axis' | 'both_axes'; animation_mode: 'none' | 'layers' | 'blocks'; animation_duration: any; integrity: any; seed: any; pivot: { x: any; y: any; z: any } }

export type EducationSharedResourceURI = { button_name: string; link_uri: string }

export type EducationExternalLinkSettings = { url: string; display_name: string }

export type BlockUpdate = { position: { x: number; y: number; z: number }; runtime_id: number; flags: number; entity_unique_id: bigint; transition_type: 'entity' | 'create' | 'destroy' }

export type MaterialReducer = { mix: number; items: { network_id: number; count: number } }

export type PermissionLevel = 'visitor' | 'member' | 'operator' | 'custom'

export type CommandPermissionLevel = 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'

export type CommandPermissionLevelVarint = 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'

export type WindowID = 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'

export type WindowIDVarint = 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'

export type WindowType = 'container' | 'workbench' | 'furnace' | 'enchantment' | 'brewing_stand' | 'anvil' | 'dispenser' | 'dropper' | 'hopper' | 'cauldron' | 'minecart_chest' | 'minecart_hopper' | 'horse' | 'beacon' | 'structure_editor' | 'trading' | 'command_block' | 'jukebox' | 'armor' | 'hand' | 'compound_creator' | 'element_constructor' | 'material_reducer' | 'lab_table' | 'loom' | 'lectern' | 'grindstone' | 'blast_furnace' | 'smoker' | 'stonecutter' | 'cartography' | 'hud' | 'jigsaw_editor' | 'smithing_table' | 'chest_boat' | 'decorated_pot' | 'crafter' | 'none' | 'inventory'

export type ContainerSlotType = 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'

export type SoundType = 'ItemUseOn' | 'Hit' | 'Step' | 'Fly' | 'Jump' | 'Break' | 'Place' | 'HeavyStep' | 'Gallop' | 'Fall' | 'Ambient' | 'AmbientBaby' | 'AmbientInWater' | 'Breathe' | 'Death' | 'DeathInWater' | 'DeathToZombie' | 'Hurt' | 'HurtInWater' | 'Mad' | 'Boost' | 'Bow' | 'SquishBig' | 'SquishSmall' | 'FallBig' | 'FallSmall' | 'Splash' | 'Fizz' | 'Flap' | 'Swim' | 'Drink' | 'Eat' | 'Takeoff' | 'Shake' | 'Plop' | 'Land' | 'Saddle' | 'Armor' | 'MobArmorStandPlace' | 'AddChest' | 'Throw' | 'Attack' | 'AttackNoDamage' | 'AttackStrong' | 'Warn' | 'Shear' | 'Milk' | 'Thunder' | 'Explode' | 'Fire' | 'Ignite' | 'Fuse' | 'Stare' | 'Spawn' | 'Shoot' | 'BreakBlock' | 'Launch' | 'Blast' | 'LargeBlast' | 'Twinkle' | 'Remedy' | 'Infect' | 'LevelUp' | 'BowHit' | 'BulletHit' | 'ExtinguishFire' | 'ItemFizz' | 'ChestOpen' | 'ChestClosed' | 'ShulkerBoxOpen' | 'ShulkerBoxClosed' | 'EnderChestOpen' | 'EnderChestClosed' | 'PowerOn' | 'PowerOff' | 'Attach' | 'Detach' | 'Deny' | 'Tripod' | 'Pop' | 'DropSlot' | 'Note' | 'Thorns' | 'PistonIn' | 'PistonOut' | 'Portal' | 'Water' | 'LavaPop' | 'Lava' | 'Burp' | 'BucketFillWater' | 'BucketFillLava' | 'BucketEmptyWater' | 'BucketEmptyLava' | 'ArmorEquipChain' | 'ArmorEquipDiamond' | 'ArmorEquipGeneric' | 'ArmorEquipGold' | 'ArmorEquipIron' | 'ArmorEquipLeather' | 'ArmorEquipElytra' | 'Record13' | 'RecordCat' | 'RecordBlocks' | 'RecordChirp' | 'RecordFar' | 'RecordMall' | 'RecordMellohi' | 'RecordStal' | 'RecordStrad' | 'RecordWard' | 'Record11' | 'RecordWait' | 'StopRecord' | 'Flop' | 'GuardianCurse' | 'MobWarning' | 'MobWarningBaby' | 'Teleport' | 'ShulkerOpen' | 'ShulkerClose' | 'Haggle' | 'HaggleYes' | 'HaggleNo' | 'HaggleIdle' | 'ChorusGrow' | 'ChorusDeath' | 'Glass' | 'PotionBrewed' | 'CastSpell' | 'PrepareAttackSpell' | 'PrepareSummon' | 'PrepareWololo' | 'Fang' | 'Charge' | 'CameraTakePicture' | 'LeashKnotPlace' | 'LeashKnotBreak' | 'AmbientGrowl' | 'AmbientWhine' | 'AmbientPant' | 'AmbientPurr' | 'AmbientPurreow' | 'DeathMinVolume' | 'DeathMidVolume' | 'ImitateBlaze' | 'ImitateCaveSpider' | 'ImitateCreeper' | 'ImitateElderGuardian' | 'ImitateEnderDragon' | 'ImitateEnderman' | 'ImitateEndermite' | 'ImitateEvocationIllager' | 'ImitateGhast' | 'ImitateHusk' | 'ImitateIllusionIllager' | 'ImitateMagmaCube' | 'ImitatePolarBear' | 'ImitateShulker' | 'ImitateSilverfish' | 'ImitateSkeleton' | 'ImitateSlime' | 'ImitateSpider' | 'ImitateStray' | 'ImitateVex' | 'ImitateVindicationIllager' | 'ImitateWitch' | 'ImitateWither' | 'ImitateWitherSkeleton' | 'ImitateWolf' | 'ImitateZombie' | 'ImitateZombiePigman' | 'ImitateZombieVillager' | 'EnderEyePlaced' | 'EndPortalCreated' | 'AnvilUse' | 'BottleDragonBreath' | 'PortalTravel' | 'TridentHit' | 'TridentReturn' | 'TridentRiptide1' | 'TridentRiptide2' | 'TridentRiptide3' | 'TridentThrow' | 'TridentThunder' | 'TridentHitGround' | 'Default' | 'FletchingTableUse' | 'ElemConstructOpen' | 'IceBombHit' | 'BalloonPop' | 'LtReactionIceBomb' | 'LtReactionBleach' | 'LtReactionElephantToothpaste' | 'LtReactionElephantToothpaste2' | 'LtReactionGlowStick' | 'LtReactionGlowStick2' | 'LtReactionLuminol' | 'LtReactionSalt' | 'LtReactionFertilizer' | 'LtReactionFireball' | 'LtReactionMagnesiumSalt' | 'LtReactionMiscFire' | 'LtReactionFire' | 'LtReactionMiscExplosion' | 'LtReactionMiscMystical' | 'LtReactionMiscMystical2' | 'LtReactionProduct' | 'SparklerUse' | 'GlowStickUse' | 'SparklerActive' | 'ConvertToDrowned' | 'BucketFillFish' | 'BucketEmptyFish' | 'BubbleColumnUpwards' | 'BubbleColumnDownwards' | 'BubblePop' | 'BubbleUpInside' | 'BubbleDownInside' | 'HurtBaby' | 'DeathBaby' | 'StepBaby' | 'SpawnBaby' | 'Born' | 'TurtleEggBreak' | 'TurtleEggCrack' | 'TurtleEggHatched' | 'LayEgg' | 'TurtleEggAttacked' | 'BeaconActivate' | 'BeaconAmbient' | 'BeaconDeactivate' | 'BeaconPower' | 'ConduitActivate' | 'ConduitAmbient' | 'ConduitAttack' | 'ConduitDeactivate' | 'ConduitShort' | 'Swoop' | 'BambooSaplingPlace' | 'PreSneeze' | 'Sneeze' | 'AmbientTame' | 'Scared' | 'ScaffoldingClimb' | 'CrossbowLoadingStart' | 'CrossbowLoadingMiddle' | 'CrossbowLoadingEnd' | 'CrossbowShoot' | 'CrossbowQuickChargeStart' | 'CrossbowQuickChargeMiddle' | 'CrossbowQuickChargeEnd' | 'AmbientAggressive' | 'AmbientWorried' | 'CantBreed' | 'ShieldBlock' | 'LecternBookPlace' | 'GrindstoneUse' | 'Bell' | 'CampfireCrackle' | 'Roar' | 'Stun' | 'SweetBerryBushHurt' | 'SweetBerryBushPick' | 'CartographyTableUse' | 'StonecutterUse' | 'ComposterEmpty' | 'ComposterFill' | 'ComposterFillLayer' | 'ComposterReady' | 'BarrelOpen' | 'BarrelClose' | 'RaidHorn' | 'LoomUse' | 'AmbientInRaid' | 'UicartographyTableUse' | 'UistonecutterUse' | 'UiloomUse' | 'SmokerUse' | 'BlastFurnaceUse' | 'SmithingTableUse' | 'Screech' | 'Sleep' | 'FurnaceUse' | 'MooshroomConvert' | 'MilkSuspiciously' | 'Celebrate' | 'JumpPrevent' | 'AmbientPollinate' | 'BeehiveDrip' | 'BeehiveEnter' | 'BeehiveExit' | 'BeehiveWork' | 'BeehiveShear' | 'HoneybottleDrink' | 'AmbientCave' | 'Retreat' | 'ConvertToZombified' | 'Admire' | 'StepLava' | 'Tempt' | 'Panic' | 'Angry' | 'AmbientMoodWarpedForest' | 'AmbientMoodSoulsandValley' | 'AmbientMoodNetherWastes' | 'AmbientMoodBasaltDeltas' | 'AmbientMoodCrimsonForest' | 'RespawnAnchorCharge' | 'RespawnAnchorDeplete' | 'RespawnAnchorSetSpawn' | 'RespawnAnchorAmbient' | 'SoulEscapeQuiet' | 'SoulEscapeLoud' | 'RecordPigstep' | 'LinkCompassToLodestone' | 'UseSmithingTable' | 'EquipNetherite' | 'AmbientLoopWarpedForest' | 'AmbientLoopSoulsandValley' | 'AmbientLoopNetherWastes' | 'AmbientLoopBasaltDeltas' | 'AmbientLoopCrimsonForest' | 'AmbientAdditionWarpedForest' | 'AmbientAdditionSoulsandValley' | 'AmbientAdditionNetherWastes' | 'AmbientAdditionBasaltDeltas' | 'AmbientAdditionCrimsonForest' | 'SculkSensorPowerOn' | 'SculkSensorPowerOff' | 'BucketFillPowderSnow' | 'BucketEmptyPowderSnow' | 'PointedDripstoneCauldronDripWater' | 'PointedDripstoneCauldronDripLava' | 'PointedDripstoneDripWater' | 'PointedDripstoneDripLava' | 'CaveVinesPickBerries' | 'BigDripleafTiltDown' | 'BigDripleafTiltUp' | 'CopperWaxOn' | 'CopperWaxOff' | 'Scrape' | 'PlayerHurtDrown' | 'PlayerHurtOnFire' | 'PlayerHurtFreeze' | 'UseSpyglass' | 'StopUsingSpyglass' | 'AmethystBlockChime' | 'AmbientScreamer' | 'HurtScreamer' | 'DeathScreamer' | 'MilkScreamer' | 'JumpToBlock' | 'PreRam' | 'PreRamScreamer' | 'RamImpact' | 'RamImpactScreamer' | 'SquidInkSquirt' | 'GlowSquidInkSquirt' | 'ConvertToStray' | 'CakeAddCandle' | 'ExtinguishCandle' | 'AmbientCandle' | 'BlockClick' | 'BlockClickFail' | 'SculkCatalystBloom' | 'SculkShriekerShriek' | 'WardenNearbyClose' | 'WardenNearbyCloser' | 'WardenNearbyClosest' | 'WardenSlightlyAngry' | 'RecordOtherside' | 'Tongue' | 'CrackIronGolem' | 'RepairIronGolem' | 'Listening' | 'Heartbeat' | 'HornBreak' | 'SculkPlace' | 'SculkSpread' | 'SculkCharge' | 'SculkSensorPlace' | 'SculkShriekerPlace' | 'goat_call_0' | 'goat_call_1' | 'goat_call_2' | 'goat_call_3' | 'goat_call_4' | 'goat_call_5' | 'goat_call_6' | 'goat_call_7' | 'goat_call_8' | 'goat_call_9' | 'goat_harmony_0' | 'goat_harmony_1' | 'goat_harmony_2' | 'goat_harmony_3' | 'goat_harmony_4' | 'goat_harmony_5' | 'goat_harmony_6' | 'goat_harmony_7' | 'goat_harmony_8' | 'goat_harmony_9' | 'goat_melody_0' | 'goat_melody_1' | 'goat_melody_2' | 'goat_melody_3' | 'goat_melody_4' | 'goat_melody_5' | 'goat_melody_6' | 'goat_melody_7' | 'goat_melody_8' | 'goat_melody_9' | 'goat_bass_0' | 'goat_bass_1' | 'goat_bass_2' | 'goat_bass_3' | 'goat_bass_4' | 'goat_bass_5' | 'goat_bass_6' | 'goat_bass_7' | 'goat_bass_8' | 'goat_bass_9' | '_' | '_' | '_' | 'ImitateWarden' | 'ListeningAngry' | 'ItemGiven' | 'ItemTaken' | 'Disappeared' | 'Reappeared' | 'DrinkMilk' | 'FrogspawnHatched' | 'LaySpawn' | 'FrogspawnBreak' | 'SonicBoom' | 'SonicCharge' | 'SoundeventItemThrown' | 'Record5' | 'ConvertToFrog' | 'RecordPlaying' | 'EnchantingTableUse' | 'StepSand' | 'DashReady' | 'BundleDropContents' | 'BundleInsert' | 'BundleRemoveOne' | 'PressurePlateClickOff' | 'PressurePlateClickOn' | 'ButtonClickOff' | 'ButtonClickOn' | 'DoorOpen' | 'DoorClose' | 'TrapdoorOpen' | 'TrapdoorClose' | 'FenceGateOpen' | 'FenceGateClose' | 'Insert' | 'Pickup' | 'InsertEnchanted' | 'PickupEnchanted' | 'Brush' | 'BrushCompleted' | 'ShatterDecoratedPot' | 'BreakDecoratedPot' | 'SnifferEggCrack' | 'SnifferEggHatched' | 'WaxedSignInteractFail' | 'RecordRelic' | 'Bump' | 'PumpkinCarve' | 'ConvertHuskToZombie' | 'PigDeath' | 'HoglinZombified' | 'AmbientUnderwaterEnter' | 'AmbientUnderwaterExit' | 'bottle_fill' | 'bottle_empty' | 'crafter_craft' | 'crafter_fail' | 'block_decorated_pot_insert' | 'block_decorated_pot_insert_fail' | 'crafter_disable_slot' | 'trial_spawner_open_shutter' | 'trial_spawner_eject_item' | 'trial_spawner_detect_player' | 'trial_spawner_spawn_mob' | 'trial_spawner_close_shutter' | 'trial_spawner_ambient' | 'block_copper_bulb_turn_on' | 'block_copper_bulb_turn_off' | 'ambient_in_air' | 'breeze_wind_charge_burst' | 'imitate_breeze' | 'mob_armadillo_brush' | 'mob_armadillo_scute_drop' | 'armor_equip_wolf' | 'armor_unequip_wolf' | 'reflect' | 'vault_open_shutter' | 'vault_close_shutter' | 'vault_eject_item' | 'vault_insert_item' | 'vault_insert_item_fail' | 'vault_ambient' | 'vault_activate' | 'vault_deactivate' | 'hurt_reduced' | 'wind_charge_burst' | 'imitate_drowned' | 'bundle_insert_failed' | '_' | 'armor_crack_wolf' | 'armor_break_wolf' | 'armor_repair_wolf' | 'mace_smash_air' | 'mace_smash_ground' | 'trail_spawner_charge_activate' | 'trail_spawner_ambient_ominous' | 'ominous_item_spawner_spawn_item' | 'ominous_bottle_end_use' | 'mace_smash_heavy_ground' | 'ominous_item_spawner_spawn_item_begin' | '_' | 'apply_effect_bad_omen' | 'apply_effect_raid_omen' | 'apply_effect_trial_omen' | 'ominous_item_spawner_about_to_spawn_item' | 'record_creator' | 'record_creator_music_box' | 'record_precipice'

export type LegacyEntityType = 'chicken' | 'cow' | 'pig' | 'sheep' | 'wolf' | 'villager' | 'mooshroom' | 'squid' | 'rabbit' | 'bat' | 'iron_golem' | 'snow_golem' | 'ocelot' | 'horse' | 'donkey' | 'mule' | 'skeleton_horse' | 'zombie_horse' | 'polar_bear' | 'llama' | 'parrot' | 'dolphin' | 'zombie' | 'creeper' | 'skeleton' | 'spider' | 'zombie_pigman' | 'slime' | 'enderman' | 'silverfish' | 'cave_spider' | 'ghast' | 'magma_cube' | 'blaze' | 'zombie_villager' | 'witch' | 'stray' | 'husk' | 'wither_skeleton' | 'guardian' | 'elder_guardian' | 'npc' | 'wither' | 'ender_dragon' | 'shulker' | 'endermite' | 'agent' | 'vindicator' | 'phantom' | 'armor_stand' | 'tripod_camera' | 'player' | 'item' | 'tnt' | 'falling_block' | 'moving_block' | 'xp_bottle' | 'xp_orb' | 'eye_of_ender_signal' | 'ender_crystal' | 'fireworks_rocket' | 'thrown_trident' | 'turtle' | 'cat' | 'shulker_bullet' | 'fishing_hook' | 'chalkboard' | 'dragon_fireball' | 'arrow' | 'snowball' | 'egg' | 'painting' | 'minecart' | 'fireball' | 'splash_potion' | 'ender_pearl' | 'leash_knot' | 'wither_skull' | 'boat' | 'wither_skull_dangerous' | 'lightning_bolt' | 'small_fireball' | 'area_effect_cloud' | 'hopper_minecart' | 'tnt_minecart' | 'chest_minecart' | 'command_block_minecart' | 'lingering_potion' | 'llama_spit' | 'evocation_fang' | 'evocation_illager' | 'vex' | 'ice_bomb' | 'balloon' | 'pufferfish' | 'salmon' | 'drowned' | 'tropicalfish' | 'cod' | 'panda'

export type DeviceOS = 'Undefined' | 'Android' | 'IOS' | 'OSX' | 'FireOS' | 'GearVR' | 'Hololens' | 'Win10' | 'Win32' | 'Dedicated' | 'TVOS' | 'Orbis' | 'NintendoSwitch' | 'Xbox' | 'WindowsPhone' | 'Linux'

export type AbilitySet = number

export type AbilityLayers = { type: 'cache' | 'base' | 'spectator' | 'commands' | 'editor' | 'loading_screen'; allowed: number; enabled: number; fly_speed: any; vertical_fly_speed: any; walk_speed: any }

export type CameraPresets = { name: string; parent: string; position: { x: any; y: any; z: any }; rotation: { x: any; y: any }; rotation_speed: any; snap_to_target: any; horizontal_rotation_limit: any; vertical_rotation_limit: any; continue_targeting: any; tracking_radius: any; offset: any; entity_offset: any; radius: any; yaw_limit_min: any; yaw_limit_max: any; audio_listener: any; player_effects: any; align_target_and_camera_forward: any; aim_assist: any }

export type DisconnectFailReason = 'unknown' | 'cant_connect_no_internet' | 'no_permissions' | 'unrecoverable_error' | 'third_party_blocked' | 'third_party_no_internet' | 'third_party_bad_ip' | 'third_party_no_server_or_server_locked' | 'version_mismatch' | 'skin_issue' | 'invite_session_not_found' | 'edu_level_settings_missing' | 'local_server_not_found' | 'legacy_disconnect' | 'user_leave_game_attempted' | 'platform_locked_skins_error' | 'realms_world_unassigned' | 'realms_server_cant_connect' | 'realms_server_hidden' | 'realms_server_disabled_beta' | 'realms_server_disabled' | 'cross_platform_disallowed' | 'cant_connect' | 'session_not_found' | 'client_settings_incompatible_with_server' | 'server_full' | 'invalid_platform_skin' | 'edition_version_mismatch' | 'edition_mismatch' | 'level_newer_than_exe_version' | 'no_fail_occurred' | 'banned_skin' | 'timeout' | 'server_not_found' | 'outdated_server' | 'outdated_client' | 'no_premium_platform' | 'multiplayer_disabled' | 'no_wifi' | 'world_corruption' | 'no_reason' | 'disconnected' | 'invalid_player' | 'logged_in_other_location' | 'server_id_conflict' | 'not_allowed' | 'not_authenticated' | 'invalid_tenant' | 'unknown_packet' | 'unexpected_packet' | 'invalid_command_request_packet' | 'host_suspended' | 'login_packet_no_request' | 'login_packet_no_cert' | 'missing_client' | 'kicked' | 'kicked_for_exploit' | 'kicked_for_idle' | 'resource_pack_problem' | 'incompatible_pack' | 'out_of_storage' | 'invalid_level' | 'disconnect_packet_deprecated' | 'block_mismatch' | 'invalid_heights' | 'invalid_widths' | 'connection_lost' | 'zombie_connection' | 'shutdown' | 'reason_not_set' | 'loading_state_timeout' | 'resource_pack_loading_failed' | 'searching_for_session_loading_screen_failed' | 'conn_protocol_version' | 'subsystem_status_error' | 'empty_auth_from_discovery' | 'empty_url_from_discovery' | 'expired_auth_from_discovery' | 'unknown_signal_service_sign_in_failure' | 'xbl_join_lobby_failure' | 'unspecified_client_instance_disconnection' | 'conn_session_not_found' | 'conn_create_peer_connection' | 'conn_ice' | 'conn_connect_request' | 'conn_connect_response' | 'conn_negotiation_timeout' | 'conn_inactivity_timeout' | 'stale_connection_being_replaced' | 'realms_session_not_found' | 'bad_packet' | 'conn_failed_to_create_offer' | 'conn_failed_to_create_answer' | 'conn_failed_to_set_local_description' | 'conn_failed_to_set_remote_description' | 'conn_negotiation_timeout_waiting_for_response' | 'conn_negotiation_timeout_waiting_for_accept' | 'conn_incoming_connection_ignored' | 'conn_signaling_parsing_failure' | 'conn_signaling_unknown_error' | 'conn_signaling_unicast_delivery_failed' | 'conn_signaling_broadcast_delivery_failed' | 'conn_signaling_generic_delivery_failed' | 'editor_mismatch_editor_world' | 'editor_mismatch_vanilla_world' | 'world_transfer_not_primary_client' | 'server_shutdown' | 'game_setup_cancelled' | 'game_setup_failed' | 'no_venue' | 'conn_signalling_sign_in_failed' | 'session_access_denied' | 'service_sign_in_issue' | 'conn_no_signaling_channel' | 'conn_not_logged_in' | 'conn_client_signalling_error' | 'sub_client_login_disabled' | 'deep_link_trying_to_open_demo_world_while_signed_in'

export type FullContainerName = { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }

export type MovementEffectType = 'GLIDE_BOOST' | 'invalid'

export type LoginTokens = { identity: any; client: any }

export type UpdateBlockFlags = number

export type AdventureFlags = number

export type ActionPermissions = number

export type UpdateMapFlags = number

export type CommandFlags = any

export type DeltaMoveFlags = number

export type InputFlag = number

export type ArmorDamageType = number

export type SubChunkEntryWithoutCaching = Array<{ dx: number; dy: number; dz: number; result: 'undefined' | 'success' | 'chunk_not_found' | 'invalid_dimension' | 'player_not_found' | 'y_index_out_of_bounds' | 'success_all_air'; payload: Buffer; heightmap_type: 'no_data' | 'has_data' | 'too_high' | 'too_low'; heightmap: Buffer }>

export type SubChunkEntryWithCaching = Array<{ dx: number; dy: number; dz: number; result: 'undefined' | 'success' | 'chunk_not_found' | 'invalid_dimension' | 'player_not_found' | 'y_index_out_of_bounds' | 'success_all_air'; payload: {}; heightmap_type: 'no_data' | 'has_data' | 'too_high' | 'too_low'; heightmap: Buffer; blob_id: bigint }>

export type RequestPermissions = number

export type InputLockFlags = number

export type Element = 'PaperDoll' | 'Armour' | 'ToolTips' | 'TouchControls' | 'Crosshair' | 'HotBar' | 'Health' | 'ProgressBar' | 'Hunger' | 'AirBubbles' | 'VehicleHealth' | 'EffectsBar' | 'ItemTextPopup'

export type MinecraftPacketName = 'login' | 'play_status' | 'server_to_client_handshake' | 'client_to_server_handshake' | 'disconnect' | 'resource_packs_info' | 'resource_pack_stack' | 'resource_pack_client_response' | 'text' | 'set_time' | 'start_game' | 'add_player' | 'add_entity' | 'remove_entity' | 'add_item_entity' | 'take_item_entity' | 'move_entity' | 'move_player' | 'rider_jump' | 'update_block' | 'add_painting' | 'tick_sync' | 'level_sound_event_old' | 'level_event' | 'block_event' | 'entity_event' | 'mob_effect' | 'update_attributes' | 'inventory_transaction' | 'mob_equipment' | 'mob_armor_equipment' | 'interact' | 'block_pick_request' | 'entity_pick_request' | 'player_action' | 'hurt_armor' | 'set_entity_data' | 'set_entity_motion' | 'set_entity_link' | 'set_health' | 'set_spawn_position' | 'animate' | 'respawn' | 'container_open' | 'container_close' | 'player_hotbar' | 'inventory_content' | 'inventory_slot' | 'container_set_data' | 'crafting_data' | 'crafting_event' | 'gui_data_pick_item' | 'adventure_settings' | 'block_entity_data' | 'player_input' | 'level_chunk' | 'set_commands_enabled' | 'set_difficulty' | 'change_dimension' | 'set_player_game_type' | 'player_list' | 'simple_event' | 'event' | 'spawn_experience_orb' | 'clientbound_map_item_data' | 'map_info_request' | 'request_chunk_radius' | 'chunk_radius_update' | 'game_rules_changed' | 'camera' | 'boss_event' | 'show_credits' | 'available_commands' | 'command_request' | 'command_block_update' | 'command_output' | 'update_trade' | 'update_equipment' | 'resource_pack_data_info' | 'resource_pack_chunk_data' | 'resource_pack_chunk_request' | 'transfer' | 'play_sound' | 'stop_sound' | 'set_title' | 'add_behavior_tree' | 'structure_block_update' | 'show_store_offer' | 'purchase_receipt' | 'player_skin' | 'sub_client_login' | 'initiate_web_socket_connection' | 'set_last_hurt_by' | 'book_edit' | 'npc_request' | 'photo_transfer' | 'modal_form_request' | 'modal_form_response' | 'server_settings_request' | 'server_settings_response' | 'show_profile' | 'set_default_game_type' | 'remove_objective' | 'set_display_objective' | 'set_score' | 'lab_table' | 'update_block_synced' | 'move_entity_delta' | 'set_scoreboard_identity' | 'set_local_player_as_initialized' | 'update_soft_enum' | 'network_stack_latency' | 'script_custom_event' | 'spawn_particle_effect' | 'available_entity_identifiers' | 'level_sound_event_v2' | 'network_chunk_publisher_update' | 'biome_definition_list' | 'level_sound_event' | 'level_event_generic' | 'lectern_update' | 'video_stream_connect' | 'client_cache_status' | 'on_screen_texture_animation' | 'map_create_locked_copy' | 'structure_template_data_export_request' | 'structure_template_data_export_response' | 'update_block_properties' | 'client_cache_blob_status' | 'client_cache_miss_response' | 'education_settings' | 'emote' | 'multiplayer_settings' | 'settings_command' | 'anvil_damage' | 'completed_using_item' | 'network_settings' | 'player_auth_input' | 'creative_content' | 'player_enchant_options' | 'item_stack_request' | 'item_stack_response' | 'player_armor_damage' | 'update_player_game_type' | 'emote_list' | 'position_tracking_db_request' | 'position_tracking_db_broadcast' | 'packet_violation_warning' | 'motion_prediction_hints' | 'animate_entity' | 'camera_shake' | 'player_fog' | 'correct_player_move_prediction' | 'item_registry' | 'filter_text_packet' | 'debug_renderer' | 'sync_entity_property' | 'add_volume_entity' | 'remove_volume_entity' | 'simulation_type' | 'npc_dialogue' | 'edu_uri_resource_packet' | 'create_photo' | 'update_subchunk_blocks' | 'photo_info_request' | 'subchunk' | 'subchunk_request' | 'client_start_item_cooldown' | 'script_message' | 'code_builder_source' | 'ticking_areas_load_status' | 'dimension_data' | 'agent_action' | 'change_mob_property' | 'lesson_progress' | 'request_ability' | 'request_permissions' | 'toast_request' | 'update_abilities' | 'update_adventure_settings' | 'death_info' | 'editor_network' | 'feature_registry' | 'server_stats' | 'request_network_settings' | 'game_test_request' | 'game_test_results' | 'update_client_input_locks' | 'client_cheat_ability' | 'camera_presets' | 'unlocked_recipes' | 'camera_instruction' | 'compressed_biome_definitions' | 'trim_data' | 'open_sign' | 'agent_animation' | 'refresh_entitlements' | 'toggle_crafter_slot_request' | 'set_player_inventory_options' | 'set_hud' | 'award_achievement' | 'server_post_move' | 'clientbound_close_form' | 'serverbound_loading_screen' | 'jigsaw_structure_data' | 'current_structure_feature' | 'serverbound_diagnostics' | 'camera_aim_assist' | 'container_registry_cleanup' | 'movement_effect' | 'set_movement_authority' | 'camera_aim_assist_presets' | 'client_camera_aim_assist' | 'client_movement_prediction_sync' | 'update_client_options' | 'player_video_capture' | 'player_update_entity_overrides'


export interface PacketTypeMap {
  'login': { protocol_version: number; tokens: any }
  'play_status': { status: 'login_success' | 'failed_client' | 'failed_spawn' | 'player_spawn' | 'failed_invalid_tenant' | 'failed_vanilla_edu' | 'failed_edu_vanilla' | 'failed_server_full' | 'failed_editor_vanilla_mismatch' | 'failed_vanilla_editor_mismatch' }
  'server_to_client_handshake': { token: string }
  'client_to_server_handshake': {}
  'disconnect': { reason: 'unknown' | 'cant_connect_no_internet' | 'no_permissions' | 'unrecoverable_error' | 'third_party_blocked' | 'third_party_no_internet' | 'third_party_bad_ip' | 'third_party_no_server_or_server_locked' | 'version_mismatch' | 'skin_issue' | 'invite_session_not_found' | 'edu_level_settings_missing' | 'local_server_not_found' | 'legacy_disconnect' | 'user_leave_game_attempted' | 'platform_locked_skins_error' | 'realms_world_unassigned' | 'realms_server_cant_connect' | 'realms_server_hidden' | 'realms_server_disabled_beta' | 'realms_server_disabled' | 'cross_platform_disallowed' | 'cant_connect' | 'session_not_found' | 'client_settings_incompatible_with_server' | 'server_full' | 'invalid_platform_skin' | 'edition_version_mismatch' | 'edition_mismatch' | 'level_newer_than_exe_version' | 'no_fail_occurred' | 'banned_skin' | 'timeout' | 'server_not_found' | 'outdated_server' | 'outdated_client' | 'no_premium_platform' | 'multiplayer_disabled' | 'no_wifi' | 'world_corruption' | 'no_reason' | 'disconnected' | 'invalid_player' | 'logged_in_other_location' | 'server_id_conflict' | 'not_allowed' | 'not_authenticated' | 'invalid_tenant' | 'unknown_packet' | 'unexpected_packet' | 'invalid_command_request_packet' | 'host_suspended' | 'login_packet_no_request' | 'login_packet_no_cert' | 'missing_client' | 'kicked' | 'kicked_for_exploit' | 'kicked_for_idle' | 'resource_pack_problem' | 'incompatible_pack' | 'out_of_storage' | 'invalid_level' | 'disconnect_packet_deprecated' | 'block_mismatch' | 'invalid_heights' | 'invalid_widths' | 'connection_lost' | 'zombie_connection' | 'shutdown' | 'reason_not_set' | 'loading_state_timeout' | 'resource_pack_loading_failed' | 'searching_for_session_loading_screen_failed' | 'conn_protocol_version' | 'subsystem_status_error' | 'empty_auth_from_discovery' | 'empty_url_from_discovery' | 'expired_auth_from_discovery' | 'unknown_signal_service_sign_in_failure' | 'xbl_join_lobby_failure' | 'unspecified_client_instance_disconnection' | 'conn_session_not_found' | 'conn_create_peer_connection' | 'conn_ice' | 'conn_connect_request' | 'conn_connect_response' | 'conn_negotiation_timeout' | 'conn_inactivity_timeout' | 'stale_connection_being_replaced' | 'realms_session_not_found' | 'bad_packet' | 'conn_failed_to_create_offer' | 'conn_failed_to_create_answer' | 'conn_failed_to_set_local_description' | 'conn_failed_to_set_remote_description' | 'conn_negotiation_timeout_waiting_for_response' | 'conn_negotiation_timeout_waiting_for_accept' | 'conn_incoming_connection_ignored' | 'conn_signaling_parsing_failure' | 'conn_signaling_unknown_error' | 'conn_signaling_unicast_delivery_failed' | 'conn_signaling_broadcast_delivery_failed' | 'conn_signaling_generic_delivery_failed' | 'editor_mismatch_editor_world' | 'editor_mismatch_vanilla_world' | 'world_transfer_not_primary_client' | 'server_shutdown' | 'game_setup_cancelled' | 'game_setup_failed' | 'no_venue' | 'conn_signalling_sign_in_failed' | 'session_access_denied' | 'service_sign_in_issue' | 'conn_no_signaling_channel' | 'conn_not_logged_in' | 'conn_client_signalling_error' | 'sub_client_login_disabled' | 'deep_link_trying_to_open_demo_world_while_signed_in'; hide_disconnect_reason: boolean; undefined: {} }
  'resource_packs_info': { must_accept: boolean; has_addons: boolean; has_scripts: boolean; world_template: { uuid: string; version: string }; texture_packs: Array<{ uuid: string; version: string; size: bigint; content_key: string; sub_pack_name: string; content_identity: string; has_scripts: boolean; addon_pack: boolean; rtx_enabled: boolean; cdn_url: string }> }
  'resource_pack_stack': { must_accept: boolean; behavior_packs: Array<{ uuid: string; version: string; name: string }>; resource_packs: Array<{ uuid: string; version: string; name: string }>; game_version: string; experiments: Array<{ name: string; enabled: boolean }>; experiments_previously_used: boolean; has_editor_packs: boolean }
  'resource_pack_client_response': { response_status: 'none' | 'refused' | 'send_packs' | 'have_all_packs' | 'completed'; resourcepackids: Array<string> }
  'text': { type: 'raw' | 'chat' | 'translation' | 'popup' | 'jukebox_popup' | 'tip' | 'system' | 'whisper' | 'announcement' | 'json_whisper' | 'json' | 'json_announcement'; needs_translation: boolean; undefined: { source_name: string; message: string } | { source_name: string; message: string } | { source_name: string; message: string } | { message: string } | { message: string } | { message: string } | { message: string } | { message: string } | { message: string } | { message: string; parameters: Array<string> } | { message: string; parameters: Array<string> } | { message: string; parameters: Array<string> }; xuid: string; platform_chat_id: string; filtered_message: string }
  'set_time': { time: number }
  'start_game': { entity_id: bigint; runtime_entity_id: any; player_gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator'; player_position: { x: any; y: any; z: any }; rotation: { x: any; z: any }; seed: bigint; biome_type: any; biome_name: string; dimension: 'overworld' | 'nether' | 'end'; generator: number; world_gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator'; hardcore: boolean; difficulty: number; spawn_position: { x: number; y: number; z: number }; achievements_disabled: boolean; editor_world_type: 'not_editor' | 'project' | 'test_level'; created_in_editor: boolean; exported_from_editor: boolean; day_cycle_stop_time: number; edu_offer: number; edu_features_enabled: boolean; edu_product_uuid: string; rain_level: any; lightning_level: any; has_confirmed_platform_locked_content: boolean; is_multiplayer: boolean; broadcast_to_lan: boolean; xbox_live_broadcast_mode: number; platform_broadcast_mode: number; enable_commands: boolean; is_texturepacks_required: boolean; gamerules: Array<{ name: string; editable: boolean; type: 'bool' | 'int' | 'float'; value: {} | {} | {} }>; experiments: Array<{ name: string; enabled: boolean }>; experiments_previously_used: boolean; bonus_chest: boolean; map_enabled: boolean; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; server_chunk_tick_range: number; has_locked_behavior_pack: boolean; has_locked_resource_pack: boolean; is_from_locked_world_template: boolean; msa_gamertags_only: boolean; is_from_world_template: boolean; is_world_template_option_locked: boolean; only_spawn_v1_villagers: boolean; persona_disabled: boolean; custom_skins_disabled: boolean; emote_chat_muted: boolean; game_version: string; limited_world_width: number; limited_world_length: number; is_new_nether: boolean; edu_resource_uri: { button_name: string; link_uri: string }; experimental_gameplay_override: boolean; chat_restriction_level: 'none' | 'dropped' | 'disabled'; disable_player_interactions: boolean; server_identifier: string; world_identifier: string; scenario_identifier: string; level_id: string; world_name: string; premium_world_template_id: string; is_trial: boolean; movement_authority: 'client' | 'server' | 'server_with_rewind'; rewind_history_size: number; server_authoritative_block_breaking: boolean; current_tick: any; enchantment_seed: number; block_properties: Array<{ name: string; state: any }>; multiplayer_correlation_id: string; server_authoritative_inventory: boolean; engine: string; property_data: any; block_pallette_checksum: bigint; world_template_id: string; client_side_generation: boolean; block_network_ids_are_hashes: boolean; server_controlled_sound: boolean }
  'add_player': { uuid: string; username: string; runtime_id: any; platform_chat_id: string; position: { x: any; y: any; z: any }; velocity: { x: any; y: any; z: any }; pitch: any; yaw: any; head_yaw: any; held_item: { network_id: number; undefined: {} }; gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator'; metadata: Array<{ key: 'flags' | 'health' | 'variant' | 'color' | 'nametag' | 'owner_eid' | 'target_eid' | 'air' | 'potion_color' | 'potion_ambient' | 'jump_duration' | 'hurt_time' | 'hurt_direction' | 'paddle_time_left' | 'paddle_time_right' | 'experience_value' | 'minecart_display_block' | 'minecart_display_offset' | 'minecart_has_display' | 'horse_type' | 'creeper_swell' | 'creeper_swell_direction' | 'charge_amount' | 'enderman_held_runtime_id' | 'entity_age' | 'player_flags' | 'player_index' | 'player_bed_position' | 'fireball_power_x' | 'fireball_power_y' | 'fireball_power_z' | 'aux_power' | 'fish_x' | 'fish_z' | 'fish_angle' | 'potion_aux_value' | 'lead_holder_eid' | 'scale' | 'interactive_tag' | 'npc_skin_id' | 'url_tag' | 'max_airdata_max_air' | 'mark_variant' | 'container_type' | 'container_base_size' | 'container_extra_slots_per_strength' | 'block_target' | 'wither_invulnerable_ticks' | 'wither_target_1' | 'wither_target_2' | 'wither_target_3' | 'wither_aerial_attack' | 'boundingbox_width' | 'boundingbox_height' | 'fuse_length' | 'rider_seat_position' | 'rider_rotation_locked' | 'rider_max_rotation' | 'rider_min_rotation' | 'rider_seat_rotation_offset' | 'area_effect_cloud_radius' | 'area_effect_cloud_waiting' | 'area_effect_cloud_particle_id' | 'shulker_peek_id' | 'shulker_attach_face' | 'shulker_attached' | 'shulker_attach_pos' | 'trading_player_eid' | 'trading_career' | 'has_command_block' | 'command_block_command' | 'command_block_last_output' | 'command_block_track_output' | 'controlling_rider_seat_number' | 'strength' | 'max_strength' | 'evoker_spell_casting_color' | 'limited_life' | 'armor_stand_pose_index' | 'ender_crystal_time_offset' | 'always_show_nametag' | 'color_2' | 'name_author' | 'score_tag' | 'balloon_attached_entity' | 'pufferfish_size' | 'bubble_time' | 'agent' | 'sitting_amount' | 'sitting_amount_previous' | 'eating_counter' | 'flags_extended' | 'laying_amount' | 'laying_amount_previous' | 'area_effect_cloud_duration' | 'area_effect_cloud_spawn_time' | 'area_effect_cloud_change_rate' | 'area_effect_cloud_change_on_pickup' | 'area_effect_cloud_pickup_count' | 'interact_text' | 'trade_tier' | 'max_trade_tier' | 'trade_experience' | 'skin_id' | 'spawning_frames' | 'command_block_tick_delay' | 'command_block_execute_on_first_tick' | 'ambient_sound_interval' | 'ambient_sound_interval_range' | 'ambient_sound_event_name' | 'fall_damage_multiplier' | 'name_raw_text' | 'can_ride_target' | 'low_tier_cured_discount' | 'high_tier_cured_discount' | 'nearby_cured_discount' | 'nearby_cured_discount_timestamp' | 'hitbox' | 'is_buoyant' | 'freezing_effect_strength' | 'buoyancy_data' | 'goat_horn_count' | 'update_properties' | 'movement_sound_distance_offset' | 'heartbeat_interval_ticks' | 'heartbeat_sound_event' | 'player_last_death_position' | 'player_last_death_dimension' | 'player_has_died' | 'collision_box' | 'visible_mob_effects' | 'filtered_name' | 'bed_enter_position'; type: 'byte' | 'short' | 'int' | 'float' | 'string' | 'compound' | 'vec3i' | 'long' | 'vec3f'; value: {} | {} }>; properties: { ints: Array<{ index: number; value: number }>; floats: Array<{ index: number; value: any }> }; unique_id: any; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; command_permission: 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'; abilities: Array<{ type: 'cache' | 'base' | 'spectator' | 'commands' | 'editor' | 'loading_screen'; allowed: number; enabled: number; fly_speed: any; vertical_fly_speed: any; walk_speed: any }>; links: Array<{ ridden_entity_id: bigint; rider_entity_id: bigint; type: number; immediate: boolean; rider_initiated: boolean; angular_velocity: any }>; device_id: string; device_os: 'Undefined' | 'Android' | 'IOS' | 'OSX' | 'FireOS' | 'GearVR' | 'Hololens' | 'Win10' | 'Win32' | 'Dedicated' | 'TVOS' | 'Orbis' | 'NintendoSwitch' | 'Xbox' | 'WindowsPhone' | 'Linux' }
  'add_entity': { unique_id: bigint; runtime_id: any; entity_type: string; position: { x: any; y: any; z: any }; velocity: { x: any; y: any; z: any }; pitch: any; yaw: any; head_yaw: any; body_yaw: any; attributes: Array<{ name: string; min: any; value: any; max: any }>; metadata: Array<{ key: 'flags' | 'health' | 'variant' | 'color' | 'nametag' | 'owner_eid' | 'target_eid' | 'air' | 'potion_color' | 'potion_ambient' | 'jump_duration' | 'hurt_time' | 'hurt_direction' | 'paddle_time_left' | 'paddle_time_right' | 'experience_value' | 'minecart_display_block' | 'minecart_display_offset' | 'minecart_has_display' | 'horse_type' | 'creeper_swell' | 'creeper_swell_direction' | 'charge_amount' | 'enderman_held_runtime_id' | 'entity_age' | 'player_flags' | 'player_index' | 'player_bed_position' | 'fireball_power_x' | 'fireball_power_y' | 'fireball_power_z' | 'aux_power' | 'fish_x' | 'fish_z' | 'fish_angle' | 'potion_aux_value' | 'lead_holder_eid' | 'scale' | 'interactive_tag' | 'npc_skin_id' | 'url_tag' | 'max_airdata_max_air' | 'mark_variant' | 'container_type' | 'container_base_size' | 'container_extra_slots_per_strength' | 'block_target' | 'wither_invulnerable_ticks' | 'wither_target_1' | 'wither_target_2' | 'wither_target_3' | 'wither_aerial_attack' | 'boundingbox_width' | 'boundingbox_height' | 'fuse_length' | 'rider_seat_position' | 'rider_rotation_locked' | 'rider_max_rotation' | 'rider_min_rotation' | 'rider_seat_rotation_offset' | 'area_effect_cloud_radius' | 'area_effect_cloud_waiting' | 'area_effect_cloud_particle_id' | 'shulker_peek_id' | 'shulker_attach_face' | 'shulker_attached' | 'shulker_attach_pos' | 'trading_player_eid' | 'trading_career' | 'has_command_block' | 'command_block_command' | 'command_block_last_output' | 'command_block_track_output' | 'controlling_rider_seat_number' | 'strength' | 'max_strength' | 'evoker_spell_casting_color' | 'limited_life' | 'armor_stand_pose_index' | 'ender_crystal_time_offset' | 'always_show_nametag' | 'color_2' | 'name_author' | 'score_tag' | 'balloon_attached_entity' | 'pufferfish_size' | 'bubble_time' | 'agent' | 'sitting_amount' | 'sitting_amount_previous' | 'eating_counter' | 'flags_extended' | 'laying_amount' | 'laying_amount_previous' | 'area_effect_cloud_duration' | 'area_effect_cloud_spawn_time' | 'area_effect_cloud_change_rate' | 'area_effect_cloud_change_on_pickup' | 'area_effect_cloud_pickup_count' | 'interact_text' | 'trade_tier' | 'max_trade_tier' | 'trade_experience' | 'skin_id' | 'spawning_frames' | 'command_block_tick_delay' | 'command_block_execute_on_first_tick' | 'ambient_sound_interval' | 'ambient_sound_interval_range' | 'ambient_sound_event_name' | 'fall_damage_multiplier' | 'name_raw_text' | 'can_ride_target' | 'low_tier_cured_discount' | 'high_tier_cured_discount' | 'nearby_cured_discount' | 'nearby_cured_discount_timestamp' | 'hitbox' | 'is_buoyant' | 'freezing_effect_strength' | 'buoyancy_data' | 'goat_horn_count' | 'update_properties' | 'movement_sound_distance_offset' | 'heartbeat_interval_ticks' | 'heartbeat_sound_event' | 'player_last_death_position' | 'player_last_death_dimension' | 'player_has_died' | 'collision_box' | 'visible_mob_effects' | 'filtered_name' | 'bed_enter_position'; type: 'byte' | 'short' | 'int' | 'float' | 'string' | 'compound' | 'vec3i' | 'long' | 'vec3f'; value: {} | {} }>; properties: { ints: Array<{ index: number; value: number }>; floats: Array<{ index: number; value: any }> }; links: Array<{ ridden_entity_id: bigint; rider_entity_id: bigint; type: number; immediate: boolean; rider_initiated: boolean; angular_velocity: any }> }
  'remove_entity': { entity_id_self: bigint }
  'add_item_entity': { entity_id_self: bigint; runtime_entity_id: any; item: { network_id: number; undefined: {} }; position: { x: any; y: any; z: any }; velocity: { x: any; y: any; z: any }; metadata: Array<{ key: 'flags' | 'health' | 'variant' | 'color' | 'nametag' | 'owner_eid' | 'target_eid' | 'air' | 'potion_color' | 'potion_ambient' | 'jump_duration' | 'hurt_time' | 'hurt_direction' | 'paddle_time_left' | 'paddle_time_right' | 'experience_value' | 'minecart_display_block' | 'minecart_display_offset' | 'minecart_has_display' | 'horse_type' | 'creeper_swell' | 'creeper_swell_direction' | 'charge_amount' | 'enderman_held_runtime_id' | 'entity_age' | 'player_flags' | 'player_index' | 'player_bed_position' | 'fireball_power_x' | 'fireball_power_y' | 'fireball_power_z' | 'aux_power' | 'fish_x' | 'fish_z' | 'fish_angle' | 'potion_aux_value' | 'lead_holder_eid' | 'scale' | 'interactive_tag' | 'npc_skin_id' | 'url_tag' | 'max_airdata_max_air' | 'mark_variant' | 'container_type' | 'container_base_size' | 'container_extra_slots_per_strength' | 'block_target' | 'wither_invulnerable_ticks' | 'wither_target_1' | 'wither_target_2' | 'wither_target_3' | 'wither_aerial_attack' | 'boundingbox_width' | 'boundingbox_height' | 'fuse_length' | 'rider_seat_position' | 'rider_rotation_locked' | 'rider_max_rotation' | 'rider_min_rotation' | 'rider_seat_rotation_offset' | 'area_effect_cloud_radius' | 'area_effect_cloud_waiting' | 'area_effect_cloud_particle_id' | 'shulker_peek_id' | 'shulker_attach_face' | 'shulker_attached' | 'shulker_attach_pos' | 'trading_player_eid' | 'trading_career' | 'has_command_block' | 'command_block_command' | 'command_block_last_output' | 'command_block_track_output' | 'controlling_rider_seat_number' | 'strength' | 'max_strength' | 'evoker_spell_casting_color' | 'limited_life' | 'armor_stand_pose_index' | 'ender_crystal_time_offset' | 'always_show_nametag' | 'color_2' | 'name_author' | 'score_tag' | 'balloon_attached_entity' | 'pufferfish_size' | 'bubble_time' | 'agent' | 'sitting_amount' | 'sitting_amount_previous' | 'eating_counter' | 'flags_extended' | 'laying_amount' | 'laying_amount_previous' | 'area_effect_cloud_duration' | 'area_effect_cloud_spawn_time' | 'area_effect_cloud_change_rate' | 'area_effect_cloud_change_on_pickup' | 'area_effect_cloud_pickup_count' | 'interact_text' | 'trade_tier' | 'max_trade_tier' | 'trade_experience' | 'skin_id' | 'spawning_frames' | 'command_block_tick_delay' | 'command_block_execute_on_first_tick' | 'ambient_sound_interval' | 'ambient_sound_interval_range' | 'ambient_sound_event_name' | 'fall_damage_multiplier' | 'name_raw_text' | 'can_ride_target' | 'low_tier_cured_discount' | 'high_tier_cured_discount' | 'nearby_cured_discount' | 'nearby_cured_discount_timestamp' | 'hitbox' | 'is_buoyant' | 'freezing_effect_strength' | 'buoyancy_data' | 'goat_horn_count' | 'update_properties' | 'movement_sound_distance_offset' | 'heartbeat_interval_ticks' | 'heartbeat_sound_event' | 'player_last_death_position' | 'player_last_death_dimension' | 'player_has_died' | 'collision_box' | 'visible_mob_effects' | 'filtered_name' | 'bed_enter_position'; type: 'byte' | 'short' | 'int' | 'float' | 'string' | 'compound' | 'vec3i' | 'long' | 'vec3f'; value: {} | {} }>; is_from_fishing: boolean }
  'take_item_entity': { runtime_entity_id: any; target: number }
  'move_entity': { runtime_entity_id: any; flags: number; position: { x: any; y: any; z: any }; rotation: { yaw: number; pitch: number; head_yaw: number } }
  'move_player': { runtime_id: number; position: { x: any; y: any; z: any }; pitch: any; yaw: any; head_yaw: any; mode: 'normal' | 'reset' | 'teleport' | 'rotation'; on_ground: boolean; ridden_runtime_id: number; teleport: { cause: 'unknown' | 'projectile' | 'chorus_fruit' | 'command' | 'behavior'; source_entity_type: 'chicken' | 'cow' | 'pig' | 'sheep' | 'wolf' | 'villager' | 'mooshroom' | 'squid' | 'rabbit' | 'bat' | 'iron_golem' | 'snow_golem' | 'ocelot' | 'horse' | 'donkey' | 'mule' | 'skeleton_horse' | 'zombie_horse' | 'polar_bear' | 'llama' | 'parrot' | 'dolphin' | 'zombie' | 'creeper' | 'skeleton' | 'spider' | 'zombie_pigman' | 'slime' | 'enderman' | 'silverfish' | 'cave_spider' | 'ghast' | 'magma_cube' | 'blaze' | 'zombie_villager' | 'witch' | 'stray' | 'husk' | 'wither_skeleton' | 'guardian' | 'elder_guardian' | 'npc' | 'wither' | 'ender_dragon' | 'shulker' | 'endermite' | 'agent' | 'vindicator' | 'phantom' | 'armor_stand' | 'tripod_camera' | 'player' | 'item' | 'tnt' | 'falling_block' | 'moving_block' | 'xp_bottle' | 'xp_orb' | 'eye_of_ender_signal' | 'ender_crystal' | 'fireworks_rocket' | 'thrown_trident' | 'turtle' | 'cat' | 'shulker_bullet' | 'fishing_hook' | 'chalkboard' | 'dragon_fireball' | 'arrow' | 'snowball' | 'egg' | 'painting' | 'minecart' | 'fireball' | 'splash_potion' | 'ender_pearl' | 'leash_knot' | 'wither_skull' | 'boat' | 'wither_skull_dangerous' | 'lightning_bolt' | 'small_fireball' | 'area_effect_cloud' | 'hopper_minecart' | 'tnt_minecart' | 'chest_minecart' | 'command_block_minecart' | 'lingering_potion' | 'llama_spit' | 'evocation_fang' | 'evocation_illager' | 'vex' | 'ice_bomb' | 'balloon' | 'pufferfish' | 'salmon' | 'drowned' | 'tropicalfish' | 'cod' | 'panda' }; tick: any }
  'rider_jump': { jump_strength: number }
  'update_block': { position: { x: number; y: number; z: number }; block_runtime_id: number; flags: number; layer: number }
  'add_painting': { entity_id_self: bigint; runtime_entity_id: any; coordinates: { x: any; y: any; z: any }; direction: number; title: string }
  'tick_sync': { request_time: any; response_time: any }
  'level_sound_event_old': { sound_id: number; position: { x: any; y: any; z: any }; block_id: number; entity_type: number; is_baby_mob: boolean; is_global: boolean }
  'level_event': { event: 'sound_click' | 'sound_click_fail' | 'sound_shoot' | 'sound_door' | 'sound_fizz' | 'sound_ignite' | 'sound_ghast' | 'sound_ghast_shoot' | 'sound_blaze_shoot' | 'sound_door_bump' | 'sound_door_crash' | 'sound_enderman_teleport' | 'sound_anvil_break' | 'sound_anvil_use' | 'sound_anvil_fall' | 'sound_pop' | 'sound_portal' | 'sound_itemframe_add_item' | 'sound_itemframe_remove' | 'sound_itemframe_place' | 'sound_itemframe_remove_item' | 'sound_itemframe_rotate_item' | 'sound_camera' | 'sound_orb' | 'sound_totem' | 'sound_armor_stand_break' | 'sound_armor_stand_hit' | 'sound_armor_stand_fall' | 'sound_armor_stand_place' | 'pointed_dripstone_land' | 'dye_used' | 'ink_sack_used' | 'particle_shoot' | 'particle_destroy' | 'particle_splash' | 'particle_eye_despawn' | 'particle_spawn' | 'particle_crop_growth' | 'particle_guardian_curse' | 'particle_death_smoke' | 'particle_block_force_field' | 'particle_projectile_hit' | 'particle_dragon_egg_teleport' | 'particle_crop_eaten' | 'particle_critical' | 'particle_enderman_teleport' | 'particle_punch_block' | 'particle_bubble' | 'particle_evaporate' | 'particle_destroy_armor_stand' | 'particle_breaking_egg' | 'particle_destroy_egg' | 'particle_evaporate_water' | 'particle_destroy_block_no_sound' | 'particle_knockback_roar' | 'particle_teleport_trail' | 'particle_point_cloud' | 'particle_explosion' | 'particle_block_explosion' | 'particle_vibration_signal' | 'particle_dripstone_drip' | 'particle_fizz_effect' | 'particle_wax_on' | 'particle_wax_off' | 'particle_scrape' | 'particle_electric_spark' | 'particle_turtle_egg' | 'particle_sculk_shriek' | 'sculk_catalyst_bloom' | 'sculk_charge' | 'sculk_charge_pop' | 'sonic_explosion' | 'dust_plume' | 'start_rain' | 'start_thunder' | 'stop_rain' | 'stop_thunder' | 'pause_game' | 'pause_game_no_screen' | 'set_game_speed' | 'redstone_trigger' | 'cauldron_explode' | 'cauldron_dye_armor' | 'cauldron_clean_armor' | 'cauldron_fill_potion' | 'cauldron_take_potion' | 'cauldron_fill_water' | 'cauldron_take_water' | 'cauldron_add_dye' | 'cauldron_clean_banner' | 'block_start_break' | 'block_stop_break' | 'block_break_speed' | 'particle_punch_block_down' | 'particle_punch_block_up' | 'particle_punch_block_north' | 'particle_punch_block_south' | 'particle_punch_block_west' | 'particle_punch_block_east' | 'particle_shoot_white_smoke' | 'particle_breeze_wind_explosion' | 'particle_trial_spawner_detection' | 'particle_trial_spawner_spawning' | 'particle_trial_spawner_ejecting' | 'particle_wind_explosion' | 'particle_wolf_armor_break' | 'set_data' | 'players_sleeping' | 'sleeping_players' | 'jump_prevented' | 'animation_vault_activate' | 'animation_vault_deactivate' | 'animation_vault_eject_item' | 'animation_spawn_cobweb' | 'add_particle_smash_attack_ground_dust' | 'add_particle_creaking_heart_trail' | 'add_particle_mask' | 'add_particle_bubble' | 'add_particle_bubble_manual' | 'add_particle_critical' | 'add_particle_block_force_field' | 'add_particle_smoke' | 'add_particle_explode' | 'add_particle_evaporation' | 'add_particle_flame' | 'add_particle_candle_flame' | 'add_particle_lava' | 'add_particle_large_smoke' | 'add_particle_redstone' | 'add_particle_rising_red_dust' | 'add_particle_item_break' | 'add_particle_snowball_poof' | 'add_particle_huge_explode' | 'add_particle_huge_explode_seed' | 'add_particle_mob_flame' | 'add_particle_heart' | 'add_particle_terrain' | 'add_particle_town_aura' | 'add_particle_portal' | 'add_particle_water_splash' | 'add_particle_water_splash_manual' | 'add_particle_water_wake' | 'add_particle_drip_water' | 'add_particle_drip_lava' | 'add_particle_drip_honey' | 'add_particle_stalactite_drip_water' | 'add_particle_stalactite_drip_lava' | 'add_particle_falling_dust' | 'add_particle_mob_spell' | 'add_particle_mob_spell_ambient' | 'add_particle_mob_spell_instantaneous' | 'add_particle_ink' | 'add_particle_slime' | 'add_particle_rain_splash' | 'add_particle_villager_angry' | 'add_particle_villager_happy' | 'add_particle_enchantment_table' | 'add_particle_tracking_emitter' | 'add_particle_note' | 'add_particle_witch_spell' | 'add_particle_carrot' | 'add_particle_mob_appearance' | 'add_particle_end_rod' | 'add_particle_dragons_breath' | 'add_particle_spit' | 'add_particle_totem' | 'add_particle_food' | 'add_particle_fireworks_starter' | 'add_particle_fireworks_spark' | 'add_particle_fireworks_overlay' | 'add_particle_balloon_gas' | 'add_particle_colored_flame' | 'add_particle_sparkler' | 'add_particle_conduit' | 'add_particle_bubble_column_up' | 'add_particle_bubble_column_down' | 'add_particle_sneeze' | 'add_particle_shulker_bullet' | 'add_particle_bleach' | 'add_particle_dragon_destroy_block' | 'add_particle_mycelium_dust' | 'add_particle_falling_red_dust' | 'add_particle_campfire_smoke' | 'add_particle_tall_campfire_smoke' | 'add_particle_dragon_breath_fire' | 'add_particle_dragon_breath_trail' | 'add_particle_blue_flame' | 'add_particle_soul' | 'add_particle_obsidian_tear' | 'add_particle_portal_reverse' | 'add_particle_snowflake' | 'add_particle_vibration_signal' | 'add_particle_sculk_sensor_redstone' | 'add_particle_spore_blossom_shower' | 'add_particle_spore_blossom_ambient' | 'add_particle_wax' | 'add_particle_electric_spark'; position: { x: any; y: any; z: any }; data: number }
  'block_event': { position: { x: number; y: number; z: number }; type: 'sound' | 'change_state'; data: number }
  'entity_event': { runtime_entity_id: any; event_id: 'jump' | 'hurt_animation' | 'death_animation' | 'arm_swing' | 'stop_attack' | 'tame_fail' | 'tame_success' | 'shake_wet' | 'use_item' | 'eat_grass_animation' | 'fish_hook_bubble' | 'fish_hook_position' | 'fish_hook_hook' | 'fish_hook_tease' | 'squid_ink_cloud' | 'zombie_villager_cure' | 'respawn' | 'iron_golem_offer_flower' | 'iron_golem_withdraw_flower' | 'love_particles' | 'villager_angry' | 'villager_happy' | 'witch_spell_particles' | 'firework_particles' | 'in_love_particles' | 'silverfish_spawn_animation' | 'guardian_attack' | 'witch_drink_potion' | 'witch_throw_potion' | 'minecart_tnt_prime_fuse' | 'creeper_prime_fuse' | 'air_supply_expired' | 'player_add_xp_levels' | 'elder_guardian_curse' | 'agent_arm_swing' | 'ender_dragon_death' | 'dust_particles' | 'arrow_shake' | 'eating_item' | 'baby_animal_feed' | 'death_smoke_cloud' | 'complete_trade' | 'remove_leash' | 'caravan' | 'consume_totem' | 'player_check_treasure_hunter_achievement' | 'entity_spawn' | 'dragon_puke' | 'item_entity_merge' | 'start_swim' | 'balloon_pop' | 'treasure_hunt' | 'agent_summon' | 'charged_item' | 'fall' | 'grow_up' | 'vibration_detected' | 'drink_milk'; data: number }
  'mob_effect': { runtime_entity_id: any; event_id: 'add' | 'update' | 'remove'; effect_id: number; amplifier: number; particles: boolean; duration: number; tick: any }
  'update_attributes': { runtime_entity_id: any; attributes: Array<{ min: any; max: any; current: any; default_min: any; default_max: any; default: any; name: string; modifiers: Array<{ id: string; name: string; amount: any; operation: number; operand: number; serializable: boolean }> }>; tick: any }
  'inventory_transaction': { transaction: { legacy: { legacy_request_id: number; legacy_transactions: {} }; transaction_type: 'normal' | 'inventory_mismatch' | 'item_use' | 'item_use_on_entity' | 'item_release'; actions: Array<{ source_type: 'container' | 'global' | 'world_interaction' | 'creative' | 'craft_slot' | 'craft'; undefined: { inventory_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none' } | { action: number } | { flags: number } | { action: number }; slot: number; old_item: { network_id: number; undefined: {} }; new_item: { network_id: number; undefined: {} } }>; transaction_data: {} | {} | {} | { entity_runtime_id: any; action_type: 'interact' | 'attack'; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; player_pos: { x: any; y: any; z: any }; click_pos: { x: any; y: any; z: any } } | { action_type: 'release' | 'consume'; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; head_pos: { x: any; y: any; z: any } } } }
  'mob_equipment': { runtime_entity_id: any; item: { network_id: number; undefined: {} }; slot: number; selected_slot: number; window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none' }
  'mob_armor_equipment': { runtime_entity_id: any; helmet: { network_id: number; undefined: {} }; chestplate: { network_id: number; undefined: {} }; leggings: { network_id: number; undefined: {} }; boots: { network_id: number; undefined: {} }; body: { network_id: number; undefined: {} } }
  'interact': { action_id: 'leave_vehicle' | 'mouse_over_entity' | 'npc_open' | 'open_inventory'; target_entity_id: any; position: {} | {} }
  'block_pick_request': { x: number; y: number; z: number; add_user_data: boolean; selected_slot: number }
  'entity_pick_request': { runtime_entity_id: bigint; selected_slot: number; with_data: boolean }
  'player_action': { runtime_entity_id: any; action: 'start_break' | 'abort_break' | 'stop_break' | 'get_updated_block' | 'drop_item' | 'start_sleeping' | 'stop_sleeping' | 'respawn' | 'jump' | 'start_sprint' | 'stop_sprint' | 'start_sneak' | 'stop_sneak' | 'creative_player_destroy_block' | 'dimension_change_ack' | 'start_glide' | 'stop_glide' | 'build_denied' | 'crack_break' | 'change_skin' | 'set_enchatnment_seed' | 'swimming' | 'stop_swimming' | 'start_spin_attack' | 'stop_spin_attack' | 'interact_block' | 'predict_break' | 'continue_break' | 'start_item_use_on' | 'stop_item_use_on' | 'handled_teleport' | 'missed_swing' | 'start_crawling' | 'stop_crawling' | 'start_flying' | 'stop_flying' | 'received_server_data' | 'start_using_item'; position: { x: number; y: number; z: number }; result_position: { x: number; y: number; z: number }; face: number }
  'hurt_armor': { cause: number; damage: number; armor_slots: bigint }
  'set_entity_data': { runtime_entity_id: any; metadata: Array<{ key: 'flags' | 'health' | 'variant' | 'color' | 'nametag' | 'owner_eid' | 'target_eid' | 'air' | 'potion_color' | 'potion_ambient' | 'jump_duration' | 'hurt_time' | 'hurt_direction' | 'paddle_time_left' | 'paddle_time_right' | 'experience_value' | 'minecart_display_block' | 'minecart_display_offset' | 'minecart_has_display' | 'horse_type' | 'creeper_swell' | 'creeper_swell_direction' | 'charge_amount' | 'enderman_held_runtime_id' | 'entity_age' | 'player_flags' | 'player_index' | 'player_bed_position' | 'fireball_power_x' | 'fireball_power_y' | 'fireball_power_z' | 'aux_power' | 'fish_x' | 'fish_z' | 'fish_angle' | 'potion_aux_value' | 'lead_holder_eid' | 'scale' | 'interactive_tag' | 'npc_skin_id' | 'url_tag' | 'max_airdata_max_air' | 'mark_variant' | 'container_type' | 'container_base_size' | 'container_extra_slots_per_strength' | 'block_target' | 'wither_invulnerable_ticks' | 'wither_target_1' | 'wither_target_2' | 'wither_target_3' | 'wither_aerial_attack' | 'boundingbox_width' | 'boundingbox_height' | 'fuse_length' | 'rider_seat_position' | 'rider_rotation_locked' | 'rider_max_rotation' | 'rider_min_rotation' | 'rider_seat_rotation_offset' | 'area_effect_cloud_radius' | 'area_effect_cloud_waiting' | 'area_effect_cloud_particle_id' | 'shulker_peek_id' | 'shulker_attach_face' | 'shulker_attached' | 'shulker_attach_pos' | 'trading_player_eid' | 'trading_career' | 'has_command_block' | 'command_block_command' | 'command_block_last_output' | 'command_block_track_output' | 'controlling_rider_seat_number' | 'strength' | 'max_strength' | 'evoker_spell_casting_color' | 'limited_life' | 'armor_stand_pose_index' | 'ender_crystal_time_offset' | 'always_show_nametag' | 'color_2' | 'name_author' | 'score_tag' | 'balloon_attached_entity' | 'pufferfish_size' | 'bubble_time' | 'agent' | 'sitting_amount' | 'sitting_amount_previous' | 'eating_counter' | 'flags_extended' | 'laying_amount' | 'laying_amount_previous' | 'area_effect_cloud_duration' | 'area_effect_cloud_spawn_time' | 'area_effect_cloud_change_rate' | 'area_effect_cloud_change_on_pickup' | 'area_effect_cloud_pickup_count' | 'interact_text' | 'trade_tier' | 'max_trade_tier' | 'trade_experience' | 'skin_id' | 'spawning_frames' | 'command_block_tick_delay' | 'command_block_execute_on_first_tick' | 'ambient_sound_interval' | 'ambient_sound_interval_range' | 'ambient_sound_event_name' | 'fall_damage_multiplier' | 'name_raw_text' | 'can_ride_target' | 'low_tier_cured_discount' | 'high_tier_cured_discount' | 'nearby_cured_discount' | 'nearby_cured_discount_timestamp' | 'hitbox' | 'is_buoyant' | 'freezing_effect_strength' | 'buoyancy_data' | 'goat_horn_count' | 'update_properties' | 'movement_sound_distance_offset' | 'heartbeat_interval_ticks' | 'heartbeat_sound_event' | 'player_last_death_position' | 'player_last_death_dimension' | 'player_has_died' | 'collision_box' | 'visible_mob_effects' | 'filtered_name' | 'bed_enter_position'; type: 'byte' | 'short' | 'int' | 'float' | 'string' | 'compound' | 'vec3i' | 'long' | 'vec3f'; value: {} | {} }>; properties: { ints: Array<{ index: number; value: number }>; floats: Array<{ index: number; value: any }> }; tick: any }
  'set_entity_motion': { runtime_entity_id: any; velocity: { x: any; y: any; z: any }; tick: any }
  'set_entity_link': { link: { ridden_entity_id: bigint; rider_entity_id: bigint; type: number; immediate: boolean; rider_initiated: boolean; angular_velocity: any } }
  'set_health': { health: number }
  'set_spawn_position': { spawn_type: 'player' | 'world'; player_position: { x: number; y: number; z: number }; dimension: number; world_position: { x: number; y: number; z: number } }
  'animate': { action_id: 'none' | 'swing_arm' | 'unknown' | 'wake_up' | 'critical_hit' | 'magic_critical_hit' | 'row_right' | 'row_left'; runtime_entity_id: any; undefined: { boat_rowing_time: any } | { boat_rowing_time: any } }
  'respawn': { position: { x: any; y: any; z: any }; state: number; runtime_entity_id: any }
  'container_open': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; window_type: 'container' | 'workbench' | 'furnace' | 'enchantment' | 'brewing_stand' | 'anvil' | 'dispenser' | 'dropper' | 'hopper' | 'cauldron' | 'minecart_chest' | 'minecart_hopper' | 'horse' | 'beacon' | 'structure_editor' | 'trading' | 'command_block' | 'jukebox' | 'armor' | 'hand' | 'compound_creator' | 'element_constructor' | 'material_reducer' | 'lab_table' | 'loom' | 'lectern' | 'grindstone' | 'blast_furnace' | 'smoker' | 'stonecutter' | 'cartography' | 'hud' | 'jigsaw_editor' | 'smithing_table' | 'chest_boat' | 'decorated_pot' | 'crafter' | 'none' | 'inventory'; coordinates: { x: number; y: number; z: number }; runtime_entity_id: bigint }
  'container_close': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; window_type: 'container' | 'workbench' | 'furnace' | 'enchantment' | 'brewing_stand' | 'anvil' | 'dispenser' | 'dropper' | 'hopper' | 'cauldron' | 'minecart_chest' | 'minecart_hopper' | 'horse' | 'beacon' | 'structure_editor' | 'trading' | 'command_block' | 'jukebox' | 'armor' | 'hand' | 'compound_creator' | 'element_constructor' | 'material_reducer' | 'lab_table' | 'loom' | 'lectern' | 'grindstone' | 'blast_furnace' | 'smoker' | 'stonecutter' | 'cartography' | 'hud' | 'jigsaw_editor' | 'smithing_table' | 'chest_boat' | 'decorated_pot' | 'crafter' | 'none' | 'inventory'; server: boolean }
  'player_hotbar': { selected_slot: number; window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; select_slot: boolean }
  'inventory_content': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; input: Array<{ network_id: number; undefined: {} }>; container: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; storage_item: { network_id: number; undefined: {} } }
  'inventory_slot': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; slot: number; container: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; storage_item: { network_id: number; undefined: {} }; item: { network_id: number; undefined: {} } }
  'container_set_data': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; property: number; value: number }
  'crafting_data': { recipes: Array<{ type: 'shapeless' | 'shaped' | 'furnace' | 'furnace_with_metadata' | 'multi' | 'shulker_box' | 'shapeless_chemistry' | 'shaped_chemistry' | 'smithing_transform' | 'smithing_trim'; recipe: { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; input: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; width: number; height: number; input: Array<Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; assume_symmetry: boolean; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { recipe_id: any; width: number; height: number; input: Array<Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }>>; output: Array<{ network_id: number; undefined: {} }>; uuid: string; block: string; priority: number; assume_symmetry: boolean; unlocking_requirement: { context: 'none' | 'always_unlocked' | 'player_in_water' | 'player_has_many_items'; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> }; network_id: number } | { input_id: number; output: { network_id: number; undefined: {} }; block: string } | { input_id: number; input_meta: number; output: { network_id: number; undefined: {} }; block: string } | { uuid: string; network_id: number } | { recipe_id: any; template: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; base: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; addition: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; result: { network_id: number; undefined: {} }; tag: string; network_id: number } | { recipe_id: any; template: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; input: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; addition: { type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }; block: string; network_id: number } }>; potion_type_recipes: Array<{ input_item_id: number; input_item_meta: number; ingredient_id: number; ingredient_meta: number; output_item_id: number; output_item_meta: number }>; potion_container_recipes: Array<{ input_item_id: number; ingredient_id: number; output_item_id: number }>; material_reducers: Array<{ mix: number; items: { network_id: number; count: number } }>; clear_recipes: boolean }
  'crafting_event': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; recipe_type: 'inventory' | 'crafting' | 'workbench'; recipe_id: string; input: Array<{ network_id: number; undefined: {} }>; result: Array<{ network_id: number; undefined: {} }> }
  'gui_data_pick_item': { item_name: string; item_effects: string; hotbar_slot: number }
  'adventure_settings': { flags: number; command_permission: 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'; action_permissions: number; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; custom_stored_permissions: number; user_id: any }
  'block_entity_data': { position: { x: number; y: number; z: number }; nbt: any }
  'player_input': { motion_x: any; motion_z: any; jumping: boolean; sneaking: boolean }
  'level_chunk': { x: number; z: number; dimension: number; sub_chunk_count: number; highest_subchunk_count: {}; cache_enabled: boolean; blobs: { hashes: Array<bigint> }; payload: Buffer }
  'set_commands_enabled': { enabled: boolean }
  'set_difficulty': { difficulty: number }
  'change_dimension': { dimension: number; position: { x: any; y: any; z: any }; respawn: boolean; loading_screen_id: any }
  'set_player_game_type': { gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator' }
  'player_list': { records: { type: 'add' | 'remove'; records_count: number; records: Array<{ uuid: string; entity_unique_id: bigint; username: string; xbox_user_id: string; platform_chat_id: string; build_platform: number; skin_data: { skin_id: string; play_fab_id: string; skin_resource_pack: string; skin_data: { width: number; height: number; data: Buffer }; animations: Array<{ skin_image: { width: number; height: number; data: Buffer }; animation_type: number; animation_frames: any; expression_type: any }>; cape_data: { width: number; height: number; data: Buffer }; geometry_data: string; geometry_data_version: string; animation_data: string; cape_id: string; full_skin_id: string; arm_size: string; skin_color: string; personal_pieces: Array<{ piece_id: string; piece_type: string; pack_id: string; is_default_piece: boolean; product_id: string }>; piece_tint_colors: Array<{ piece_type: string; colors: Array<string> }>; premium: boolean; persona: boolean; cape_on_classic: boolean; primary_user: boolean; overriding_player_appearance: boolean }; is_teacher: boolean; is_host: boolean; is_subclient: boolean } | { uuid: string }>; verified: Array<boolean> } }
  'simple_event': { event_type: 'uninitialized_subtype' | 'enable_commands' | 'disable_commands' | 'unlock_world_template_settings' }
  'event': { runtime_id: any; event_type: 'achievement_awarded' | 'entity_interact' | 'portal_built' | 'portal_used' | 'mob_killed' | 'cauldron_used' | 'player_death' | 'boss_killed' | 'agent_command' | 'agent_created' | 'banner_pattern_removed' | 'command_executed' | 'fish_bucketed' | 'mob_born' | 'pet_died' | 'cauldron_block_used' | 'composter_block_used' | 'bell_block_used' | 'actor_definition' | 'raid_update' | 'player_movement_anomaly' | 'player_movement_corrected' | 'honey_harvested' | 'target_block_hit' | 'piglin_barter' | 'waxed_or_unwaxed_copper' | 'code_builder_runtime_action' | 'code_builder_scoreboard' | 'strider_ridden_in_lava_in_overworld' | 'sneak_close_to_sculk_sensor' | 'careful_restoration' | 'item_used'; use_player_id: number; event_data: Buffer }
  'spawn_experience_orb': { position: { x: any; y: any; z: any }; count: number }
  'clientbound_map_item_data': { map_id: bigint; update_flags: number; dimension: number; locked: boolean; origin: { x: number; y: number; z: number }; included_in: Array<bigint>; scale: {}; tracked: { objects: Array<{ type: 'entity' | 'block'; entity_unique_id: {}; block_position: {} }>; decorations: Array<{ type: 'marker_white' | 'marker_green' | 'marker_red' | 'marker_blue' | 'cross_white' | 'triangle_red' | 'square_white' | 'marker_sign' | 'marker_pink' | 'marker_orange' | 'marker_yellow' | 'marker_teal' | 'triangle_green' | 'small_square_white' | 'mansion' | 'monument' | 'no_draw' | 'village_desert' | 'village_plains' | 'village_savanna' | 'village_snowy' | 'village_taiga' | 'jungle_temple' | 'witch_hut =>' | 'marker_white' | 'marker_green' | 'marker_red' | 'marker_blue' | 'cross_white' | 'triangle_red' | 'square_white' | 'marker_sign' | 'marker_pink' | 'marker_orange' | 'marker_yellow' | 'marker_teal' | 'triangle_green' | 'small_square_white' | 'mansion' | 'monument' | 'no_draw' | 'village_desert' | 'village_plains' | 'village_savanna' | 'village_snowy' | 'village_taiga' | 'jungle_temple' | 'witch_hut'; rotation: number; x: number; y: number; label: string; color_abgr: number }> }; texture: { width: number; height: number; x_offset: number; y_offset: number; pixels: Array<number> } }
  'map_info_request': { map_id: bigint; client_pixels: Array<{ rgba: number; index: any }> }
  'request_chunk_radius': { chunk_radius: number; max_radius: number }
  'chunk_radius_update': { chunk_radius: number }
  'game_rules_changed': { rules: Array<{ name: string; editable: boolean; type: 'bool' | 'int' | 'float'; value: {} | {} | {} }> }
  'camera': { camera_entity_unique_id: bigint; target_player_unique_id: bigint }
  'boss_event': { boss_entity_id: bigint; type: 'show_bar' | 'register_player' | 'hide_bar' | 'unregister_player' | 'set_bar_progress' | 'set_bar_title' | 'update_properties' | 'texture' | 'query'; undefined: { title: string; filtered_title: string; progress: any; screen_darkening: any; color: number; overlay: number } | { player_id: bigint } | { player_id: bigint } | { player_id: bigint } | { progress: any } | { title: string; filtered_title: string } | { screen_darkening: any; color: number; overlay: number } | { color: number; overlay: number } }
  'show_credits': { runtime_entity_id: any; status: number }
  'available_commands': { values_len: number; _enum_type: number; enum_values: Array<string>; chained_subcommand_values: Array<string>; suffixes: Array<string>; enums: Array<{ name: string; values: Array<{} | {} | {}> }>; chained_subcommands: Array<{ name: string; values: Array<{ index: any; value: any }> }>; command_data: Array<{ name: string; description: string; flags: any; permission_level: number; alias: number; chained_subcommand_offsets: Array<any>; overloads: Array<{ chaining: boolean; parameters: Array<{ parameter_name: string; value_type: 'int' | 'float' | 'value' | 'wildcard_int' | 'operator' | 'command_operator' | 'target' | 'wildcard_target' | 'file_path' | 'integer_range' | 'equipment_slots' | 'string' | 'block_position' | 'position' | 'message' | 'raw_text' | 'json' | 'block_states' | 'command'; enum_type: 'valid' | 'enum' | 'suffixed' | 'soft_enum'; optional: boolean; options: any }> }> }>; dynamic_enums: Array<{ name: string; values: Array<string> }>; enum_constraints: Array<{ value_index: number; enum_index: number; constraints: Array<{ constraint: 'cheats_enabled' | 'operator_permissions' | 'host_permissions' }> }> }
  'command_request': { command: string; origin: { type: 'player' | 'block' | 'minecart_block' | 'dev_console' | 'test' | 'automation_player' | 'client_automation' | 'dedicated_server' | 'entity' | 'virtual' | 'game_argument' | 'entity_server' | 'precompiled' | 'game_director_entity_server' | 'script' | 'executor'; uuid: string; request_id: string; player_entity_id: { player_entity_id: bigint } | { player_entity_id: bigint } }; internal: boolean; version: number }
  'command_block_update': { is_block: boolean; undefined: { position: { x: number; y: number; z: number }; mode: 'impulse' | 'repeat' | 'chain'; needs_redstone: boolean; conditional: boolean } | { minecart_entity_runtime_id: any }; command: string; last_output: string; name: string; filtered_name: string; should_track_output: boolean; tick_delay: number; execute_on_first_tick: boolean }
  'command_output': { origin: { type: 'player' | 'block' | 'minecart_block' | 'dev_console' | 'test' | 'automation_player' | 'client_automation' | 'dedicated_server' | 'entity' | 'virtual' | 'game_argument' | 'entity_server' | 'precompiled' | 'game_director_entity_server' | 'script' | 'executor'; uuid: string; request_id: string; player_entity_id: { player_entity_id: bigint } | { player_entity_id: bigint } }; output_type: 'last' | 'silent' | 'all' | 'data_set'; success_count: number; output: Array<{ success: boolean; message_id: string; parameters: Array<string> }>; data_set: {} }
  'update_trade': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; window_type: 'container' | 'workbench' | 'furnace' | 'enchantment' | 'brewing_stand' | 'anvil' | 'dispenser' | 'dropper' | 'hopper' | 'cauldron' | 'minecart_chest' | 'minecart_hopper' | 'horse' | 'beacon' | 'structure_editor' | 'trading' | 'command_block' | 'jukebox' | 'armor' | 'hand' | 'compound_creator' | 'element_constructor' | 'material_reducer' | 'lab_table' | 'loom' | 'lectern' | 'grindstone' | 'blast_furnace' | 'smoker' | 'stonecutter' | 'cartography' | 'hud' | 'jigsaw_editor' | 'smithing_table' | 'chest_boat' | 'decorated_pot' | 'crafter' | 'none' | 'inventory'; size: number; trade_tier: number; villager_unique_id: any; entity_unique_id: any; display_name: string; new_trading_ui: boolean; economic_trades: boolean; offers: any }
  'update_equipment': { window_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none'; window_type: 'container' | 'workbench' | 'furnace' | 'enchantment' | 'brewing_stand' | 'anvil' | 'dispenser' | 'dropper' | 'hopper' | 'cauldron' | 'minecart_chest' | 'minecart_hopper' | 'horse' | 'beacon' | 'structure_editor' | 'trading' | 'command_block' | 'jukebox' | 'armor' | 'hand' | 'compound_creator' | 'element_constructor' | 'material_reducer' | 'lab_table' | 'loom' | 'lectern' | 'grindstone' | 'blast_furnace' | 'smoker' | 'stonecutter' | 'cartography' | 'hud' | 'jigsaw_editor' | 'smithing_table' | 'chest_boat' | 'decorated_pot' | 'crafter' | 'none' | 'inventory'; size: number; entity_id: bigint; inventory: any }
  'resource_pack_data_info': { pack_id: string; max_chunk_size: any; chunk_count: any; size: bigint; hash: Buffer; is_premium: boolean; pack_type: 'addon' | 'cached' | 'copy_protected' | 'behavior' | 'persona_piece' | 'resources' | 'skins' | 'world_template' }
  'resource_pack_chunk_data': { pack_id: string; chunk_index: any; progress: bigint; payload: Buffer }
  'resource_pack_chunk_request': { pack_id: string; chunk_index: any }
  'transfer': { server_address: string; port: any; reload_world: boolean }
  'play_sound': { name: string; coordinates: { x: number; y: number; z: number }; volume: any; pitch: any }
  'stop_sound': { name: string; stop_all: boolean; stop_music_legacy: boolean }
  'set_title': { type: 'clear' | 'reset' | 'set_title' | 'set_subtitle' | 'action_bar_message' | 'set_durations' | 'set_title_json' | 'set_subtitle_json' | 'action_bar_message_json'; text: string; fade_in_time: number; stay_time: number; fade_out_time: number; xuid: string; platform_online_id: string; filtered_message: string }
  'add_behavior_tree': { behaviortree: string }
  'structure_block_update': { position: { x: number; y: number; z: number }; structure_name: string; filtered_structure_name: string; data_field: string; include_players: boolean; show_bounding_box: boolean; structure_block_type: number; settings: { palette_name: string; ignore_entities: boolean; ignore_blocks: boolean; non_ticking_players_and_ticking_areas: boolean; size: { x: number; y: number; z: number }; structure_offset: { x: number; y: number; z: number }; last_editing_player_unique_id: bigint; rotation: 'none' | '90_deg' | '180_deg' | '270_deg'; mirror: 'none' | 'x_axis' | 'z_axis' | 'both_axes'; animation_mode: 'none' | 'layers' | 'blocks'; animation_duration: any; integrity: any; seed: any; pivot: { x: any; y: any; z: any } }; redstone_save_mode: number; should_trigger: boolean; water_logged: boolean }
  'show_store_offer': { offer_id: string; redirect_type: 'marketplace' | 'dressing_room' | 'third_party_server_page' }
  'purchase_receipt': { receipts: Array<string> }
  'player_skin': { uuid: string; skin: { skin_id: string; play_fab_id: string; skin_resource_pack: string; skin_data: { width: number; height: number; data: Buffer }; animations: Array<{ skin_image: { width: number; height: number; data: Buffer }; animation_type: number; animation_frames: any; expression_type: any }>; cape_data: { width: number; height: number; data: Buffer }; geometry_data: string; geometry_data_version: string; animation_data: string; cape_id: string; full_skin_id: string; arm_size: string; skin_color: string; personal_pieces: Array<{ piece_id: string; piece_type: string; pack_id: string; is_default_piece: boolean; product_id: string }>; piece_tint_colors: Array<{ piece_type: string; colors: Array<string> }>; premium: boolean; persona: boolean; cape_on_classic: boolean; primary_user: boolean; overriding_player_appearance: boolean }; skin_name: string; old_skin_name: string; is_verified: boolean }
  'sub_client_login': { tokens: any }
  'initiate_web_socket_connection': { server: string }
  'set_last_hurt_by': { entity_type: number }
  'book_edit': { type: 'replace_page' | 'add_page' | 'delete_page' | 'swap_pages' | 'sign'; slot: number; undefined: { page_number: number; text: string; photo_name: string } | { page_number: number; text: string; photo_name: string } | { page_number: number } | { page1: number; page2: number } | { title: string; author: string; xuid: string } }
  'npc_request': { runtime_entity_id: any; request_type: 'set_actions' | 'execute_action' | 'execute_closing_commands' | 'set_name' | 'set_skin' | 'set_interaction_text' | 'execute_opening_commands'; command: string; action_type: 'set_actions' | 'execute_action' | 'execute_closing_commands' | 'set_name' | 'set_skin' | 'set_interact_text' | 'execute_opening_commands'; scene_name: string }
  'photo_transfer': { image_name: string; image_data: string; book_id: string; photo_type: number; source_type: number; owner_entity_unique_id: any; new_photo_name: string }
  'modal_form_request': { form_id: number; data: string }
  'modal_form_response': { form_id: number; has_response_data: boolean; data: {}; has_cancel_reason: boolean; undefined: { cancel_reason: 'closed' | 'busy' } }
  'server_settings_request': {}
  'server_settings_response': { form_id: number; data: string }
  'show_profile': { xuid: string }
  'set_default_game_type': { gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator' }
  'remove_objective': { objective_name: string }
  'set_display_objective': { display_slot: string; objective_name: string; display_name: string; criteria_name: string; sort_order: number }
  'set_score': { action: 'change' | 'remove'; entries: Array<{ scoreboard_id: bigint; objective_name: string; score: number; undefined: { entry_type: 'player' | 'entity' | 'fake_player'; entity_unique_id: {} | {}; custom_name: {} } }> }
  'lab_table': { action_type: 'combine' | 'react' | 'reset'; position: { x: number; y: number; z: number }; reaction_type: number }
  'update_block_synced': { position: { x: number; y: number; z: number }; block_runtime_id: number; flags: number; layer: number; entity_unique_id: bigint; transition_type: 'entity' | 'create' | 'destroy' }
  'move_entity_delta': { runtime_entity_id: any; flags: number; x: {}; y: {}; z: {}; rot_x: {}; rot_y: {}; rot_z: {} }
  'set_scoreboard_identity': { action: 'register_identity' | 'clear_identity'; entries: Array<{ scoreboard_id: bigint; entity_unique_id: {} }> }
  'set_local_player_as_initialized': { runtime_entity_id: any }
  'update_soft_enum': { enum_type: string; options: Array<string>; action_type: 'add' | 'remove' | 'update' }
  'network_stack_latency': { timestamp: bigint; needs_response: number }
  'script_custom_event': { event_name: string; event_data: string }
  'spawn_particle_effect': { dimension: number; entity_id: bigint; position: { x: any; y: any; z: any }; particle_name: string; molang_variables: any }
  'available_entity_identifiers': { nbt: any }
  'level_sound_event_v2': { sound_id: number; position: { x: any; y: any; z: any }; block_id: number; entity_type: string; is_baby_mob: boolean; is_global: boolean }
  'network_chunk_publisher_update': { coordinates: { x: number; y: number; z: number }; radius: number; saved_chunks: Array<{ x: number; z: number }> }
  'biome_definition_list': { nbt: any }
  'level_sound_event': { sound_id: 'ItemUseOn' | 'Hit' | 'Step' | 'Fly' | 'Jump' | 'Break' | 'Place' | 'HeavyStep' | 'Gallop' | 'Fall' | 'Ambient' | 'AmbientBaby' | 'AmbientInWater' | 'Breathe' | 'Death' | 'DeathInWater' | 'DeathToZombie' | 'Hurt' | 'HurtInWater' | 'Mad' | 'Boost' | 'Bow' | 'SquishBig' | 'SquishSmall' | 'FallBig' | 'FallSmall' | 'Splash' | 'Fizz' | 'Flap' | 'Swim' | 'Drink' | 'Eat' | 'Takeoff' | 'Shake' | 'Plop' | 'Land' | 'Saddle' | 'Armor' | 'MobArmorStandPlace' | 'AddChest' | 'Throw' | 'Attack' | 'AttackNoDamage' | 'AttackStrong' | 'Warn' | 'Shear' | 'Milk' | 'Thunder' | 'Explode' | 'Fire' | 'Ignite' | 'Fuse' | 'Stare' | 'Spawn' | 'Shoot' | 'BreakBlock' | 'Launch' | 'Blast' | 'LargeBlast' | 'Twinkle' | 'Remedy' | 'Infect' | 'LevelUp' | 'BowHit' | 'BulletHit' | 'ExtinguishFire' | 'ItemFizz' | 'ChestOpen' | 'ChestClosed' | 'ShulkerBoxOpen' | 'ShulkerBoxClosed' | 'EnderChestOpen' | 'EnderChestClosed' | 'PowerOn' | 'PowerOff' | 'Attach' | 'Detach' | 'Deny' | 'Tripod' | 'Pop' | 'DropSlot' | 'Note' | 'Thorns' | 'PistonIn' | 'PistonOut' | 'Portal' | 'Water' | 'LavaPop' | 'Lava' | 'Burp' | 'BucketFillWater' | 'BucketFillLava' | 'BucketEmptyWater' | 'BucketEmptyLava' | 'ArmorEquipChain' | 'ArmorEquipDiamond' | 'ArmorEquipGeneric' | 'ArmorEquipGold' | 'ArmorEquipIron' | 'ArmorEquipLeather' | 'ArmorEquipElytra' | 'Record13' | 'RecordCat' | 'RecordBlocks' | 'RecordChirp' | 'RecordFar' | 'RecordMall' | 'RecordMellohi' | 'RecordStal' | 'RecordStrad' | 'RecordWard' | 'Record11' | 'RecordWait' | 'StopRecord' | 'Flop' | 'GuardianCurse' | 'MobWarning' | 'MobWarningBaby' | 'Teleport' | 'ShulkerOpen' | 'ShulkerClose' | 'Haggle' | 'HaggleYes' | 'HaggleNo' | 'HaggleIdle' | 'ChorusGrow' | 'ChorusDeath' | 'Glass' | 'PotionBrewed' | 'CastSpell' | 'PrepareAttackSpell' | 'PrepareSummon' | 'PrepareWololo' | 'Fang' | 'Charge' | 'CameraTakePicture' | 'LeashKnotPlace' | 'LeashKnotBreak' | 'AmbientGrowl' | 'AmbientWhine' | 'AmbientPant' | 'AmbientPurr' | 'AmbientPurreow' | 'DeathMinVolume' | 'DeathMidVolume' | 'ImitateBlaze' | 'ImitateCaveSpider' | 'ImitateCreeper' | 'ImitateElderGuardian' | 'ImitateEnderDragon' | 'ImitateEnderman' | 'ImitateEndermite' | 'ImitateEvocationIllager' | 'ImitateGhast' | 'ImitateHusk' | 'ImitateIllusionIllager' | 'ImitateMagmaCube' | 'ImitatePolarBear' | 'ImitateShulker' | 'ImitateSilverfish' | 'ImitateSkeleton' | 'ImitateSlime' | 'ImitateSpider' | 'ImitateStray' | 'ImitateVex' | 'ImitateVindicationIllager' | 'ImitateWitch' | 'ImitateWither' | 'ImitateWitherSkeleton' | 'ImitateWolf' | 'ImitateZombie' | 'ImitateZombiePigman' | 'ImitateZombieVillager' | 'EnderEyePlaced' | 'EndPortalCreated' | 'AnvilUse' | 'BottleDragonBreath' | 'PortalTravel' | 'TridentHit' | 'TridentReturn' | 'TridentRiptide1' | 'TridentRiptide2' | 'TridentRiptide3' | 'TridentThrow' | 'TridentThunder' | 'TridentHitGround' | 'Default' | 'FletchingTableUse' | 'ElemConstructOpen' | 'IceBombHit' | 'BalloonPop' | 'LtReactionIceBomb' | 'LtReactionBleach' | 'LtReactionElephantToothpaste' | 'LtReactionElephantToothpaste2' | 'LtReactionGlowStick' | 'LtReactionGlowStick2' | 'LtReactionLuminol' | 'LtReactionSalt' | 'LtReactionFertilizer' | 'LtReactionFireball' | 'LtReactionMagnesiumSalt' | 'LtReactionMiscFire' | 'LtReactionFire' | 'LtReactionMiscExplosion' | 'LtReactionMiscMystical' | 'LtReactionMiscMystical2' | 'LtReactionProduct' | 'SparklerUse' | 'GlowStickUse' | 'SparklerActive' | 'ConvertToDrowned' | 'BucketFillFish' | 'BucketEmptyFish' | 'BubbleColumnUpwards' | 'BubbleColumnDownwards' | 'BubblePop' | 'BubbleUpInside' | 'BubbleDownInside' | 'HurtBaby' | 'DeathBaby' | 'StepBaby' | 'SpawnBaby' | 'Born' | 'TurtleEggBreak' | 'TurtleEggCrack' | 'TurtleEggHatched' | 'LayEgg' | 'TurtleEggAttacked' | 'BeaconActivate' | 'BeaconAmbient' | 'BeaconDeactivate' | 'BeaconPower' | 'ConduitActivate' | 'ConduitAmbient' | 'ConduitAttack' | 'ConduitDeactivate' | 'ConduitShort' | 'Swoop' | 'BambooSaplingPlace' | 'PreSneeze' | 'Sneeze' | 'AmbientTame' | 'Scared' | 'ScaffoldingClimb' | 'CrossbowLoadingStart' | 'CrossbowLoadingMiddle' | 'CrossbowLoadingEnd' | 'CrossbowShoot' | 'CrossbowQuickChargeStart' | 'CrossbowQuickChargeMiddle' | 'CrossbowQuickChargeEnd' | 'AmbientAggressive' | 'AmbientWorried' | 'CantBreed' | 'ShieldBlock' | 'LecternBookPlace' | 'GrindstoneUse' | 'Bell' | 'CampfireCrackle' | 'Roar' | 'Stun' | 'SweetBerryBushHurt' | 'SweetBerryBushPick' | 'CartographyTableUse' | 'StonecutterUse' | 'ComposterEmpty' | 'ComposterFill' | 'ComposterFillLayer' | 'ComposterReady' | 'BarrelOpen' | 'BarrelClose' | 'RaidHorn' | 'LoomUse' | 'AmbientInRaid' | 'UicartographyTableUse' | 'UistonecutterUse' | 'UiloomUse' | 'SmokerUse' | 'BlastFurnaceUse' | 'SmithingTableUse' | 'Screech' | 'Sleep' | 'FurnaceUse' | 'MooshroomConvert' | 'MilkSuspiciously' | 'Celebrate' | 'JumpPrevent' | 'AmbientPollinate' | 'BeehiveDrip' | 'BeehiveEnter' | 'BeehiveExit' | 'BeehiveWork' | 'BeehiveShear' | 'HoneybottleDrink' | 'AmbientCave' | 'Retreat' | 'ConvertToZombified' | 'Admire' | 'StepLava' | 'Tempt' | 'Panic' | 'Angry' | 'AmbientMoodWarpedForest' | 'AmbientMoodSoulsandValley' | 'AmbientMoodNetherWastes' | 'AmbientMoodBasaltDeltas' | 'AmbientMoodCrimsonForest' | 'RespawnAnchorCharge' | 'RespawnAnchorDeplete' | 'RespawnAnchorSetSpawn' | 'RespawnAnchorAmbient' | 'SoulEscapeQuiet' | 'SoulEscapeLoud' | 'RecordPigstep' | 'LinkCompassToLodestone' | 'UseSmithingTable' | 'EquipNetherite' | 'AmbientLoopWarpedForest' | 'AmbientLoopSoulsandValley' | 'AmbientLoopNetherWastes' | 'AmbientLoopBasaltDeltas' | 'AmbientLoopCrimsonForest' | 'AmbientAdditionWarpedForest' | 'AmbientAdditionSoulsandValley' | 'AmbientAdditionNetherWastes' | 'AmbientAdditionBasaltDeltas' | 'AmbientAdditionCrimsonForest' | 'SculkSensorPowerOn' | 'SculkSensorPowerOff' | 'BucketFillPowderSnow' | 'BucketEmptyPowderSnow' | 'PointedDripstoneCauldronDripWater' | 'PointedDripstoneCauldronDripLava' | 'PointedDripstoneDripWater' | 'PointedDripstoneDripLava' | 'CaveVinesPickBerries' | 'BigDripleafTiltDown' | 'BigDripleafTiltUp' | 'CopperWaxOn' | 'CopperWaxOff' | 'Scrape' | 'PlayerHurtDrown' | 'PlayerHurtOnFire' | 'PlayerHurtFreeze' | 'UseSpyglass' | 'StopUsingSpyglass' | 'AmethystBlockChime' | 'AmbientScreamer' | 'HurtScreamer' | 'DeathScreamer' | 'MilkScreamer' | 'JumpToBlock' | 'PreRam' | 'PreRamScreamer' | 'RamImpact' | 'RamImpactScreamer' | 'SquidInkSquirt' | 'GlowSquidInkSquirt' | 'ConvertToStray' | 'CakeAddCandle' | 'ExtinguishCandle' | 'AmbientCandle' | 'BlockClick' | 'BlockClickFail' | 'SculkCatalystBloom' | 'SculkShriekerShriek' | 'WardenNearbyClose' | 'WardenNearbyCloser' | 'WardenNearbyClosest' | 'WardenSlightlyAngry' | 'RecordOtherside' | 'Tongue' | 'CrackIronGolem' | 'RepairIronGolem' | 'Listening' | 'Heartbeat' | 'HornBreak' | 'SculkPlace' | 'SculkSpread' | 'SculkCharge' | 'SculkSensorPlace' | 'SculkShriekerPlace' | 'goat_call_0' | 'goat_call_1' | 'goat_call_2' | 'goat_call_3' | 'goat_call_4' | 'goat_call_5' | 'goat_call_6' | 'goat_call_7' | 'goat_call_8' | 'goat_call_9' | 'goat_harmony_0' | 'goat_harmony_1' | 'goat_harmony_2' | 'goat_harmony_3' | 'goat_harmony_4' | 'goat_harmony_5' | 'goat_harmony_6' | 'goat_harmony_7' | 'goat_harmony_8' | 'goat_harmony_9' | 'goat_melody_0' | 'goat_melody_1' | 'goat_melody_2' | 'goat_melody_3' | 'goat_melody_4' | 'goat_melody_5' | 'goat_melody_6' | 'goat_melody_7' | 'goat_melody_8' | 'goat_melody_9' | 'goat_bass_0' | 'goat_bass_1' | 'goat_bass_2' | 'goat_bass_3' | 'goat_bass_4' | 'goat_bass_5' | 'goat_bass_6' | 'goat_bass_7' | 'goat_bass_8' | 'goat_bass_9' | '_' | '_' | '_' | 'ImitateWarden' | 'ListeningAngry' | 'ItemGiven' | 'ItemTaken' | 'Disappeared' | 'Reappeared' | 'DrinkMilk' | 'FrogspawnHatched' | 'LaySpawn' | 'FrogspawnBreak' | 'SonicBoom' | 'SonicCharge' | 'SoundeventItemThrown' | 'Record5' | 'ConvertToFrog' | 'RecordPlaying' | 'EnchantingTableUse' | 'StepSand' | 'DashReady' | 'BundleDropContents' | 'BundleInsert' | 'BundleRemoveOne' | 'PressurePlateClickOff' | 'PressurePlateClickOn' | 'ButtonClickOff' | 'ButtonClickOn' | 'DoorOpen' | 'DoorClose' | 'TrapdoorOpen' | 'TrapdoorClose' | 'FenceGateOpen' | 'FenceGateClose' | 'Insert' | 'Pickup' | 'InsertEnchanted' | 'PickupEnchanted' | 'Brush' | 'BrushCompleted' | 'ShatterDecoratedPot' | 'BreakDecoratedPot' | 'SnifferEggCrack' | 'SnifferEggHatched' | 'WaxedSignInteractFail' | 'RecordRelic' | 'Bump' | 'PumpkinCarve' | 'ConvertHuskToZombie' | 'PigDeath' | 'HoglinZombified' | 'AmbientUnderwaterEnter' | 'AmbientUnderwaterExit' | 'bottle_fill' | 'bottle_empty' | 'crafter_craft' | 'crafter_fail' | 'block_decorated_pot_insert' | 'block_decorated_pot_insert_fail' | 'crafter_disable_slot' | 'trial_spawner_open_shutter' | 'trial_spawner_eject_item' | 'trial_spawner_detect_player' | 'trial_spawner_spawn_mob' | 'trial_spawner_close_shutter' | 'trial_spawner_ambient' | 'block_copper_bulb_turn_on' | 'block_copper_bulb_turn_off' | 'ambient_in_air' | 'breeze_wind_charge_burst' | 'imitate_breeze' | 'mob_armadillo_brush' | 'mob_armadillo_scute_drop' | 'armor_equip_wolf' | 'armor_unequip_wolf' | 'reflect' | 'vault_open_shutter' | 'vault_close_shutter' | 'vault_eject_item' | 'vault_insert_item' | 'vault_insert_item_fail' | 'vault_ambient' | 'vault_activate' | 'vault_deactivate' | 'hurt_reduced' | 'wind_charge_burst' | 'imitate_drowned' | 'bundle_insert_failed' | '_' | 'armor_crack_wolf' | 'armor_break_wolf' | 'armor_repair_wolf' | 'mace_smash_air' | 'mace_smash_ground' | 'trail_spawner_charge_activate' | 'trail_spawner_ambient_ominous' | 'ominous_item_spawner_spawn_item' | 'ominous_bottle_end_use' | 'mace_smash_heavy_ground' | 'ominous_item_spawner_spawn_item_begin' | '_' | 'apply_effect_bad_omen' | 'apply_effect_raid_omen' | 'apply_effect_trial_omen' | 'ominous_item_spawner_about_to_spawn_item' | 'record_creator' | 'record_creator_music_box' | 'record_precipice'; position: { x: any; y: any; z: any }; extra_data: number; entity_type: string; is_baby_mob: boolean; is_global: boolean; entity_unique_id: any }
  'level_event_generic': { event_id: number; nbt: any }
  'lectern_update': { page: number; page_count: number; position: { x: number; y: number; z: number } }
  'video_stream_connect': { server_uri: string; frame_send_frequency: any; action: 'none' | 'close'; resolution_x: number; resolution_y: number }
  'client_cache_status': { enabled: boolean }
  'on_screen_texture_animation': { animation_type: any }
  'map_create_locked_copy': { original_map_id: bigint; new_map_id: bigint }
  'structure_template_data_export_request': { name: string; position: { x: number; y: number; z: number }; settings: { palette_name: string; ignore_entities: boolean; ignore_blocks: boolean; non_ticking_players_and_ticking_areas: boolean; size: { x: number; y: number; z: number }; structure_offset: { x: number; y: number; z: number }; last_editing_player_unique_id: bigint; rotation: 'none' | '90_deg' | '180_deg' | '270_deg'; mirror: 'none' | 'x_axis' | 'z_axis' | 'both_axes'; animation_mode: 'none' | 'layers' | 'blocks'; animation_duration: any; integrity: any; seed: any; pivot: { x: any; y: any; z: any } }; request_type: 'export_from_save' | 'export_from_load' | 'query_saved_structure' | 'import_from_save' }
  'structure_template_data_export_response': { name: string; success: boolean; nbt: {}; response_type: 'export' | 'query' | 'import' }
  'update_block_properties': { nbt: any }
  'client_cache_blob_status': { misses: number; haves: number; missing: Array<bigint>; have: Array<bigint> }
  'client_cache_miss_response': { blobs: Array<{ hash: bigint; payload: Buffer }> }
  'education_settings': { CodeBuilderDefaultURI: string; CodeBuilderTitle: string; CanResizeCodeBuilder: boolean; disable_legacy_title_bar: boolean; post_process_filter: string; screenshot_border_path: string; has_agent_capabilities: boolean; agent_capabilities: { has: boolean; can_modify_blocks: boolean }; HasOverrideURI: boolean; OverrideURI: {}; HasQuiz: boolean; has_external_link_settings: boolean; external_link_settings: { has: boolean; url: string; display_name: string } }
  'emote': { entity_id: any; emote_id: string; emote_length_ticks: number; xuid: string; platform_id: string; flags: 'server_side' | 'mute_chat' }
  'multiplayer_settings': { action_type: 'enable_multiplayer' | 'disable_multiplayer' | 'refresh_join_code' }
  'settings_command': { command_line: string; suppress_output: boolean }
  'anvil_damage': { damage: number; position: { x: number; y: number; z: number } }
  'completed_using_item': { used_item_id: any; use_method: 'equip_armor' | 'eat' | 'attack' | 'consume' | 'throw' | 'shoot' | 'place' | 'fill_bottle' | 'fill_bucket' | 'pour_bucket' | 'use_tool' | 'interact' | 'retrieved' | 'dyed' | 'traded' | 'brushing_completed' | 'opened_vault' }
  'network_settings': { compression_threshold: any; compression_algorithm: 'deflate' | 'snappy'; client_throttle: boolean; client_throttle_threshold: number; client_throttle_scalar: any }
  'player_auth_input': { pitch: any; yaw: any; position: { x: any; y: any; z: any }; move_vector: { x: any; z: any }; head_yaw: any; input_data: number; input_mode: 'unknown' | 'mouse' | 'touch' | 'game_pad' | 'motion_controller'; play_mode: 'normal' | 'teaser' | 'screen' | 'viewer' | 'reality' | 'placement' | 'living_room' | 'exit_level' | 'exit_level_living_room' | 'num_modes'; interaction_model: 'touch' | 'crosshair' | 'classic'; interact_rotation: { x: any; z: any }; tick: any; delta: { x: any; y: any; z: any }; transaction: { legacy: { legacy_request_id: number; legacy_transactions: {} }; actions: Array<{ source_type: 'container' | 'global' | 'world_interaction' | 'creative' | 'craft_slot' | 'craft'; undefined: { inventory_id: 'inventory' | 'first' | 'last' | 'offhand' | 'armor' | 'creative' | 'hotbar' | 'fixed_inventory' | 'ui' | 'drop_contents' | 'beacon' | 'trading_output' | 'trading_use_inputs' | 'trading_input_2' | 'trading_input_1' | 'enchant_output' | 'enchant_material' | 'enchant_input' | 'anvil_output' | 'anvil_result' | 'anvil_material' | 'container_input' | 'crafting_use_ingredient' | 'crafting_result' | 'crafting_remove_ingredient' | 'crafting_add_ingredient' | 'none' } | { action: number } | { flags: number } | { action: number }; slot: number; old_item: { network_id: number; undefined: {} }; new_item: { network_id: number; undefined: {} } }>; data: { action_type: 'click_block' | 'click_air' | 'break_block'; trigger_type: 'unknown' | 'player_input' | 'simulation_tick'; block_position: { x: number; y: number; z: number }; face: number; hotbar_slot: number; held_item: { network_id: number; undefined: {} }; player_pos: { x: any; y: any; z: any }; click_pos: { x: any; y: any; z: any }; block_runtime_id: number; client_prediction: 'failure' | 'success' } }; item_stack_request: {}; undefined: { vehicle_rotation: { x: any; z: any }; predicted_vehicle: bigint }; block_action: Array<{ action: 'start_break' | 'abort_break' | 'stop_break' | 'get_updated_block' | 'drop_item' | 'start_sleeping' | 'stop_sleeping' | 'respawn' | 'jump' | 'start_sprint' | 'stop_sprint' | 'start_sneak' | 'stop_sneak' | 'creative_player_destroy_block' | 'dimension_change_ack' | 'start_glide' | 'stop_glide' | 'build_denied' | 'crack_break' | 'change_skin' | 'set_enchatnment_seed' | 'swimming' | 'stop_swimming' | 'start_spin_attack' | 'stop_spin_attack' | 'interact_block' | 'predict_break' | 'continue_break' | 'start_item_use_on' | 'stop_item_use_on' | 'handled_teleport' | 'missed_swing' | 'start_crawling' | 'stop_crawling' | 'start_flying' | 'stop_flying' | 'received_server_data' | 'start_using_item'; undefined: { position: { x: number; y: number; z: number }; face: number } | { position: { x: number; y: number; z: number }; face: number } | { position: { x: number; y: number; z: number }; face: number } | { position: { x: number; y: number; z: number }; face: number } | { position: { x: number; y: number; z: number }; face: number } }>; analogue_move_vector: { x: any; z: any }; camera_orientation: { x: any; y: any; z: any }; raw_move_vector: { x: any; z: any } }
  'creative_content': { groups: Array<{ category: 'all' | 'construction' | 'nature' | 'equipment' | 'items' | 'item_command_only'; name: string; icon_item: { network_id: number; undefined: {} } }>; items: Array<{ entry_id: number; item: { network_id: number; undefined: {} }; group_index: number }> }
  'player_enchant_options': { options: Array<{ cost: number; slot_flags: number; equip_enchants: Array<{ id: number; level: number }>; held_enchants: Array<{ id: number; level: number }>; self_enchants: Array<{ id: number; level: number }>; name: string; option_id: number }> }
  'item_stack_request': { requests: Array<{ request_id: number; actions: Array<{ type_id: 'take' | 'place' | 'swap' | 'drop' | 'destroy' | 'consume' | 'create' | 'place_in_container' | 'take_out_container' | 'lab_table_combine' | 'beacon_payment' | 'mine_block' | 'craft_recipe' | 'craft_recipe_auto' | 'craft_creative' | 'optional' | 'craft_grindstone_request' | 'craft_loom_request' | 'non_implemented' | 'results_deprecated'; undefined: { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; destination: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number }; randomly: boolean } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { count: number; source: { slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slot: number; stack_id: number } } | { result_slot_id: number } | { primary_effect: number; secondary_effect: number } | { hotbar_slot: number; predicted_durability: number; network_id: number } | { recipe_network_id: number; times_crafted: number } | { recipe_network_id: number; times_crafted_2: number; times_crafted: number; ingredients: Array<{ type: 'invalid' | 'int_id_meta' | 'molang' | 'item_tag' | 'string_id_meta' | 'complex_alias'; undefined: { network_id: any; metadata: {} } | { expression: string; version: number } | { tag: string } | { name: string; metadata: any } | { name: string }; count: number }> } | { item_id: number; times_crafted: number } | { recipe_network_id: number; filtered_string_index: number } | { recipe_network_id: number; times_crafted: number; cost: number } | { pattern: string; times_crafted: number } | {} | { result_items: Array<{ network_id: number; undefined: {} }>; times_crafted: number } }>; custom_names: Array<string>; cause: 'chat_public' | 'chat_whisper' | 'sign_text' | 'anvil_text' | 'book_and_quill_text' | 'command_block_text' | 'block_actor_data_text' | 'join_event_text' | 'leave_event_text' | 'slash_command_chat' | 'cartography_text' | 'kick_command' | 'title_command' | 'summon_command' }> }
  'item_stack_response': { responses: Array<{ status: 'ok' | 'error'; request_id: number; undefined: { containers: Array<{ slot_type: { container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }; slots: Array<{ slot: number; hotbar_slot: number; count: number; item_stack_id: number; custom_name: string; filtered_custom_name: string; durability_correction: number }> }> } }> }
  'player_armor_damage': { type: number; helmet_damage: {}; chestplate_damage: {}; leggings_damage: {}; boots_damage: {}; body_damage: {} }
  'update_player_game_type': { gamemode: 'survival' | 'creative' | 'adventure' | 'survival_spectator' | 'creative_spectator' | 'fallback' | 'spectator'; player_unique_id: bigint; tick: any }
  'emote_list': { player_id: any; emote_pieces: Array<string> }
  'position_tracking_db_request': { action: 'query'; tracking_id: number }
  'position_tracking_db_broadcast': { broadcast_action: 'update' | 'destory' | 'not_found'; tracking_id: number; nbt: any }
  'packet_violation_warning': { violation_type: 'malformed'; severity: 'warning' | 'final_warning' | 'terminating'; packet_id: number; reason: string }
  'motion_prediction_hints': { entity_runtime_id: any; velocity: { x: any; y: any; z: any }; on_ground: boolean }
  'animate_entity': { animation: string; next_state: string; stop_condition: string; stop_condition_version: number; controller: string; blend_out_time: any; runtime_entity_ids: Array<any> }
  'camera_shake': { intensity: any; duration: any; type: number; action: 'add' | 'stop' }
  'player_fog': { stack: Array<string> }
  'correct_player_move_prediction': { prediction_type: 'player' | 'vehicle'; position: { x: any; y: any; z: any }; delta: { x: any; y: any; z: any }; vehicle_rotation: { rotation: { x: any; z: any }; angular_velocity: any }; on_ground: boolean; tick: any }
  'item_registry': { itemstates: Array<{ name: string; runtime_id: any; component_based: boolean; version: 'legacy' | 'data_driven' | 'none'; nbt: any }> }
  'filter_text_packet': { text: string; from_server: boolean }
  'debug_renderer': { type: 'clear' | 'add_cube'; undefined: {} | { text: string; position: { x: any; y: any; z: any }; red: any; green: any; blue: any; alpha: any; duration: any } }
  'sync_entity_property': { nbt: any }
  'add_volume_entity': { runtime_id: any; nbt: any; encoding_identifier: string; instance_name: string; bounds: { min: { x: number; y: number; z: number }; max: { x: number; y: number; z: number } }; dimension: number; engine_version: string }
  'remove_volume_entity': { entity_id: any }
  'simulation_type': { type: 'game' | 'editor' | 'test' | 'invalid' }
  'npc_dialogue': { entity_id: bigint; action_type: 'open' | 'close'; dialogue: string; screen_name: string; npc_name: string; action_json: string }
  'edu_uri_resource_packet': { resource: { button_name: string; link_uri: string } }
  'create_photo': { entity_unique_id: any; photo_name: string; item_name: string }
  'update_subchunk_blocks': { x: number; y: number; z: number; blocks: Array<{ position: { x: number; y: number; z: number }; runtime_id: number; flags: number; entity_unique_id: bigint; transition_type: 'entity' | 'create' | 'destroy' }>; extra: Array<{ position: { x: number; y: number; z: number }; runtime_id: number; flags: number; entity_unique_id: bigint; transition_type: 'entity' | 'create' | 'destroy' }> }
  'photo_info_request': { photo_id: bigint }
  'subchunk': { cache_enabled: boolean; dimension: number; origin: { x: number; y: number; z: number }; entries: {} | {} }
  'subchunk_request': { dimension: number; origin: { x: number; y: number; z: number }; requests: Array<{ dx: number; dy: number; dz: number }> }
  'client_start_item_cooldown': { category: string; duration: number }
  'script_message': { message_id: string; data: string }
  'code_builder_source': { operation: 'none' | 'get' | 'set' | 'reset'; category: 'none' | 'code_status' | 'instantiation'; code_status: 'none' | 'not_started' | 'in_progress' | 'paused' | 'error' | 'succeeded' }
  'ticking_areas_load_status': { preload: boolean }
  'dimension_data': { definitions: Array<{ id: string; max_height: number; min_height: number; generator: 'legacy' | 'overworld' | 'flat' | 'nether' | 'end' | 'void' }> }
  'agent_action': { request_id: string; action_type: 'none' | 'attack' | 'collect' | 'destroy' | 'detect_redstone' | 'detect_obstacle' | 'drop' | 'drop_all' | 'inspect' | 'inspect_data' | 'inspect_item_count' | 'inspect_item_detail' | 'inspect_item_space' | 'interact' | 'move' | 'place_block' | 'till' | 'transfer_item_to' | 'turn'; body: string }
  'change_mob_property': { entity_unique_id: bigint; property: string; bool_value: boolean; string_value: string; int_value: number; float_value: any }
  'lesson_progress': { action: number; score: number; identifier: string }
  'request_ability': { ability: 'build' | 'mine' | 'doors_and_switches' | 'open_containers' | 'attack_players' | 'attack_mobs' | 'operator_commands' | 'teleport' | 'invulnerable' | 'flying' | 'may_fly' | 'instant_build' | 'lightning' | 'fly_speed' | 'walk_speed' | 'muted' | 'world_builder' | 'no_clip' | 'ability_count'; value_type: 'bool' | 'float'; bool_value: boolean; float_val: any }
  'request_permissions': { entity_unique_id: any; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; requested_permissions: number }
  'toast_request': { title: string; message: string }
  'update_abilities': { entity_unique_id: any; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; command_permission: 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'; abilities: Array<{ type: 'cache' | 'base' | 'spectator' | 'commands' | 'editor' | 'loading_screen'; allowed: number; enabled: number; fly_speed: any; vertical_fly_speed: any; walk_speed: any }> }
  'update_adventure_settings': { no_pvm: boolean; no_mvp: boolean; immutable_world: boolean; show_name_tags: boolean; auto_jump: boolean }
  'death_info': { cause: string; messages: Array<string> }
  'editor_network': { route_to_manager: boolean; payload: any }
  'feature_registry': { features: Array<{ name: string; options: string }> }
  'server_stats': { server_time: any; network_time: any }
  'request_network_settings': { client_protocol: number }
  'game_test_request': { max_tests_per_batch: number; repetitions: number; rotation: '0deg' | '90deg' | '180deg' | '270deg' | '360deg'; stop_on_error: boolean; position: { x: number; y: number; z: number }; tests_per_row: number; name: string }
  'game_test_results': { succeeded: boolean; error: string; name: string }
  'update_client_input_locks': { locks: number; position: { x: any; y: any; z: any } }
  'client_cheat_ability': { entity_unique_id: any; permission_level: 'visitor' | 'member' | 'operator' | 'custom'; command_permission: 'normal' | 'operator' | 'automation' | 'host' | 'owner' | 'internal'; abilities: Array<{ type: 'cache' | 'base' | 'spectator' | 'commands' | 'editor' | 'loading_screen'; allowed: number; enabled: number; fly_speed: any; vertical_fly_speed: any; walk_speed: any }> }
  'camera_presets': { presets: Array<{ name: string; parent: string; position: { x: any; y: any; z: any }; rotation: { x: any; y: any }; rotation_speed: any; snap_to_target: any; horizontal_rotation_limit: any; vertical_rotation_limit: any; continue_targeting: any; tracking_radius: any; offset: any; entity_offset: any; radius: any; yaw_limit_min: any; yaw_limit_max: any; audio_listener: any; player_effects: any; align_target_and_camera_forward: any; aim_assist: any }> }
  'unlocked_recipes': { unlock_type: 'empty' | 'initially_unlocked' | 'newly_unlocked' | 'remove_unlocked' | 'remove_all_unlocked'; recipes: Array<string> }
  'camera_instruction': { instruction_set: any; clear: any; fade: any; target: any; remove_target: any }
  'compressed_biome_definitions': { raw_payload: Buffer }
  'trim_data': { patterns: Array<{ item_name: string; pattern: string }>; materials: Array<{ material: string; color: string; item_name: string }> }
  'open_sign': { position: { x: number; y: number; z: number }; is_front: boolean }
  'agent_animation': { animation: 'arm_swing' | 'shrug'; entity_runtime_id: any }
  'refresh_entitlements': {}
  'toggle_crafter_slot_request': { position: { x: number; y: number; z: number }; slot: number; disabled: boolean }
  'set_player_inventory_options': { left_tab: 'none' | 'construction' | 'equipment' | 'items' | 'nature' | 'search' | 'survival'; right_tab: 'none' | 'fullscreen' | 'crafting' | 'armor'; filtering: boolean; layout: 'none' | 'survival' | 'recipe_book' | 'creative'; crafting_layout: 'none' | 'survival' | 'recipe_book' | 'creative' }
  'set_hud': { elements: Array<'PaperDoll' | 'Armour' | 'ToolTips' | 'TouchControls' | 'Crosshair' | 'HotBar' | 'Health' | 'ProgressBar' | 'Hunger' | 'AirBubbles' | 'VehicleHealth' | 'EffectsBar' | 'ItemTextPopup'>; visibility: 'hide' | 'reset' }
  'award_achievement': { achievement_id: number }
  'server_post_move': { position: { x: any; y: any; z: any } }
  'clientbound_close_form': {}
  'serverbound_loading_screen': { type: number; loading_screen_id: any }
  'jigsaw_structure_data': { structure_data: any }
  'current_structure_feature': { current_feature: string }
  'serverbound_diagnostics': { average_frames_per_second: any; average_server_sim_tick_time: any; average_client_sim_tick_time: any; average_begin_frame_time: any; average_input_time: any; average_render_time: any; average_end_frame_time: any; average_remainder_time_percent: any; average_unaccounted_time_percent: any }
  'camera_aim_assist': { preset_id: string; view_angle: { x: any; z: any }; distance: any; target_mode: 'angle' | 'distance'; action: 'set' | 'clear' }
  'container_registry_cleanup': { removed_containers: Array<{ container_id: 'anvil_input' | 'anvil_material' | 'anvil_result' | 'smithing_table_input' | 'smithing_table_material' | 'smithing_table_result' | 'armor' | 'container' | 'beacon_payment' | 'brewing_input' | 'brewing_result' | 'brewing_fuel' | 'hotbar_and_inventory' | 'crafting_input' | 'crafting_output' | 'recipe_construction' | 'recipe_nature' | 'recipe_items' | 'recipe_search' | 'recipe_search_bar' | 'recipe_equipment' | 'recipe_book' | 'enchanting_input' | 'enchanting_lapis' | 'furnace_fuel' | 'furnace_ingredient' | 'furnace_output' | 'horse_equip' | 'hotbar' | 'inventory' | 'shulker' | 'trade_ingredient1' | 'trade_ingredient2' | 'trade_result' | 'offhand' | 'compcreate_input' | 'compcreate_output' | 'elemconstruct_output' | 'matreduce_input' | 'matreduce_output' | 'labtable_input' | 'loom_input' | 'loom_dye' | 'loom_material' | 'loom_result' | 'blast_furnace_ingredient' | 'smoker_ingredient' | 'trade2_ingredient1' | 'trade2_ingredient2' | 'trade2_result' | 'grindstone_input' | 'grindstone_additional' | 'grindstone_result' | 'stonecutter_input' | 'stonecutter_result' | 'cartography_input' | 'cartography_additional' | 'cartography_result' | 'barrel' | 'cursor' | 'creative_output' | 'smithing_table_template' | 'crafter' | 'dynamic' | 'registry'; dynamic_container_id: any }> }
  'movement_effect': { runtime_id: any; effect_type: 'GLIDE_BOOST' | 'invalid'; effect_duration: number; tick: any }
  'set_movement_authority': { movement_authority: 'client' | 'server' | 'server_with_rewind' }
  'camera_aim_assist_presets': { categories: Array<{ name: string; entity_priorities: Array<{ id: string; priority: number }>; block_priorities: Array<{ id: string; priority: number }>; entity_default: any; block_default: any }>; presets: Array<{ id: string; exclude_blocks: Array<string>; target_liquids: Array<string>; item_settings: Array<{ id: string; category: string }>; default_item_settings: any; hand_settings: any }>; operation: 'set' | 'add_to_existing' }
  'client_camera_aim_assist': { preset_id: string; action: 'set_from_camera_preset' | 'clear'; allow_aim_assist: boolean }
  'client_movement_prediction_sync': { data_flags: any; bounding_box: { scale: any; width: any; height: any }; movement_speed: any; underwater_movement_speed: any; lava_movement_speed: any; jump_strength: any; health: any; hunger: any; entity_runtime_id: any; is_flying: boolean }
  'update_client_options': { graphics_mode: any }
  'player_video_capture': { action: 'stop' | 'start'; undefined: { frame_rate: number; file_prefix: string } }
  'player_update_entity_overrides': { runtime_id: any; property_index: number; type: 'clear_all' | 'remove' | 'set_int' | 'set_float'; value: {} | {} }
}

/**
 * A listener for packets that are sent from minecraft
 * @param name The name of the packet to listen for
 * @param cb The function to be executed when this packet has been recieved
 */
declare function onPacket<T extends MinecraftPacketName>(
  name: T,
  cb: (packet: PacketTypeMap[T]) => void
): void


/**
 * Sends a packet from minecraft to the realm
 * @param name The name of the packet to send
 * @param args The packet data
 */
declare function sendPacket<T extends MinecraftPacketName>(
  name: T,
  args: PacketTypeMap[T]
): void

/**
 * Kicks a player from the realm
 * @param player The players username or xuid
 * @param message The message to show the player when they get kicked
 */
declare function kickPlayer(
  player: string,
  reason: string,
): void

/**
 * Sends a command to minecraft. Example: `/give Un1queShield diamond 64`
 * @param command The command to execute in minecraft
 */
declare function sendCommand(
  command: string
): void

/**
 * Sends a command to minecraft. Example: `/give Un1queShield diamond 64`
 * @param command The command to execute in minecraft
 */
declare function sendMessage(
  message: string
): void

/**
 * Represents the unique identifier of the realm (number) or server (string) the bot is connected to
 */
declare const worldId: string | number

/**
 * The name of the realm/server the bot is connected to
 */
declare const worldName: string